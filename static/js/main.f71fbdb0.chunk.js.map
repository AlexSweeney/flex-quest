{"version":3,"sources":["components/Header.jsx","components/Home.jsx","components/parts/Burger/Burger.jsx","components/parts/Burger/BurgerMenu.jsx","components/parts/InlineClicker/InlineClicker.jsx","components/data/learn/Level_1/text.jsx","components/data/learn/Level_1/style_1.jsx","components/parts/ClickHeader/ClickHeader.jsx","components/data/learn/Level_2/text.jsx","components/data/learn/Level_2/style_1.jsx","components/data/learn/Level_2/style_2.jsx","components/data/learn/Level_2/style_3.jsx","components/data/learn/Level_2/style_4.jsx","components/data/learn/Level_2/style_5.jsx","components/data/learn/Level_2/style_6.jsx","components/parts/Text.jsx","components/utils.js","components/parts/OpenCloseToggle/OpenCloseToggle.jsx","components/parts/OpenCloseBox/OpenCloseBox.jsx","components/parts/LevelText.jsx","components/parts/Buttons/Button.jsx","components/parts/Buttons/RefreshButton/RefreshButton.jsx","components/parts/CodeInput.jsx","components/parts/Buttons/GridButton/GridButton.jsx","components/parts/Buttons/GridButton/GridOverlay.jsx","components/parts/OutputDisplay.jsx","components/Learn.jsx","components/data/learn/Level_1/html.jsx","components/data/learn/Level_2/html.jsx","components/data/html/html_3.jsx","components/data/html/html_4.jsx","components/data/html/html_5.jsx","components/data/html/html_6.jsx","components/data/html/html_7.jsx","components/data/html/html_8.jsx","components/data/html/html_9.jsx","components/data/html/html_10.jsx","components/data/html/html_11.jsx","components/data/html/html_12.jsx","components/data/html/html_13.jsx","components/data/learn/Level_1/style.jsx","components/data/learn/Level_2/style.jsx","components/data/css/style_3.jsx","components/data/css/style_4.jsx","components/data/css/style_5.jsx","components/data/css/style_6.jsx","components/data/css/style_7.jsx","components/data/css/style_8.jsx","components/data/css/style_9.jsx","components/data/css/style_10.jsx","components/data/css/style_11.jsx","components/data/css/style_12.jsx","components/data/css/style_13.jsx","App.js","index.js"],"names":["Header","useState","window","location","pathname","activeLink","setActiveLink","handleLinkClick","class","to","className","onMouseDown","onClick","Home","Burger","burgerIsOpen","setBurgerIsOpen","isOver","setIsOver","isDown","setIsDown","isAnimating","setIsAnimating","burgerOpenClass","setBurgerOpenClass","burgerBarClass","setBurgerBarClass","onTransitionStart","e","propertyName","onTransitionEnd","useEffect","burgerElement","document","getElementById","addEventListener","id","onMouseOver","onMouseOut","oldVal","onMouseUp","BurgerMenu","isOpen","setIsOpen","options","handleClick","menuOpenClass","setMenuOpenClass","map","option","onOptionClick","InlineClicker","newStyle","selectedHeader","i","setSelectedHeader","setSelectedStyle","headerName","children","clickerSelectedClass","setClickerSelectedClass","newHeader","toggleSelectedHeader","Text","props","ClickHeader","title","thisStyle","playIconId","childContainerId","headerId","showChildren","setShowChildren","playIconAnimating","setPlayIconAnimating","containerHeight","setContainerHeight","playIconClass","setPlayIconClass","headerSelectedClass","setHeaderSelectedClass","showChildrenClass","setShowChildrenClass","handleTransitionEnd","onShowChildren","style","height","onHideChildren","playIconElement","removeEventListener","childContainerElement","getComputedStyle","getContainerHeight","newClass","newVal","levelNum","ThisText","Text_1","Text_2","onTransition","onStart","onEnd","element","thisStartFn","transitionStartHandler","bind","thisEndFn","transitionEndHandler","once","srcElement","setToElementSize","idOne","idTwo","elementOne","elementTwo","elementTwoStyle","width","OpenCloseToggle","toggleIsOpen","parentIsAnimating","console","log","vertLineId","horizLineId","openCloseToggleId","lineIsAnimating","setLineIsAnimating","cursorLocation","setCursorLocation","cursorStatus","setCursorStatus","lineDirectionClass","setLineDirectionClass","lineColorClass","setLineColorClass","onChange","detectTransition","target","relatedTarget","OpenCloseBox","boxBodyId","contentContainerId","buttons","handleToggleClick","handleOverflowHidden","setContentContainerStatus","boxId","clickedOpen","setClickedOpen","boxIsOpen","setBoxIsOpen","setToggleIsOpen","widthOverflowOnClose","setWidthOverflowOnClose","heightOverflowOnClose","setHeightOverflowOnClose","savedHeight","setSavedHeight","widthIsOverflowing","setWidthIsOverflowing","heightIsOverflowing","setHeightIsOverflowing","overflowIsShrinking","setOverflowIsShrinking","boxWidthTransitionHasEnded","setBoxWidthTransitionHasEnded","boxOpenClass","setBoxOpenClass","contentContainerOpenClass","setContentContainerOpenClass","onPressBoxOpening","addListeners","onPressBoxClosing","thisWidthIsOverflowing","elementWidthIsOverflowing","thisHeightIsOverflowing","elementHeightIsOverflowing","clientWidth","keepWidth","widthId","offsetWidth","setWidthToFull","offsetHeight","saveHeight","keepHeight","setHeightToFull","onBoxClosing","onContentContainerOpen","property","fn","handleEnd","setHeightTo","heightId","clientHeight","scrollWidth","scrollHeight","button","newValue","LevelText","titles","setLevelNum","setStyle","defaultStyle","textBodyId","setTitle","selectedStyle","textBodyOpenClass","setTextBodyOpenClass","removeInlineWidth","elementWidth","getComputedWidth","fixContainerWidth","newLevelNum","indexOf","Button","RefreshButton","refreshButtonId","refreshIconId","rotateNum","setRotateNum","iconStyle","cursorIsOver","setCursorIsOver","cursorIsDown","setCursorIsDown","refreshColorClass","setRefreshColorClass","fontSize","CodeInput","code","codeDisplayId","setCode","originalCode","fadeClass","openClass","value","innerText","contenteditable","onKeyDown","GridButton","gridStatus","setGridStatus","setShowGrid","isSelected","setIsSelected","gridStatusClass","setGridStatusClass","GridOverlay","showGrid","gridColorClass","setGridColorClass","Array","numLines","keys","leftValue","left","OutputDisplay","htmlString","cssString","outputDisplayId","savedWidth","setSavedWidth","isOverflowing","setIsOverflowing","source","setSource","isResizing","setIsResizing","numTransitionStarts","setNumTransitionStarts","numTransitionEnds","setNumTransitionEnds","outputDisplayClass","setOutputDisplayClass","elementHasInlineSize","onRefreshStart","transitionStart","transitionEnd","addRefreshListeners","setToSavedSize","onClickBoxOpen","thisIsOverflowing","updateIsOverflowing","onClickBoxClosed","srcDoc","Learn","htmlStrings","cssStrings","menuOptions","setHtmlString","setCssString","defaultCssString","setDefaultCssString","App","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f71fbdb0.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nexport default function Header() { \r\n\tconst [activeLink, setActiveLink] = useState(window.location.pathname); \r\n\t\r\n\tfunction handleLinkClick(pathname) {\r\n\t\tsetActiveLink(pathname);\r\n\t} \r\n\r\n\treturn (\r\n\t\t<header class=\"header\">\r\n\t\t\t<Link to=\"/\">\r\n\t\t  \t<h1 className={activeLink === '/' ? 'link link-selected' : 'link'}  \r\n\t\t  \t\t\tonMouseDown={() => handleLinkClick('/')}>Flex Quest</h1>\r\n\t\t  </Link>\r\n\t\t  <nav>\r\n\t\t  \t<ul class=\"header-options\">\r\n\t\t  \t\t{/*<li>Intro</li>*/}\r\n\t\t  \t\t<Link to=\"/learn\">\r\n\t\t  \t\t\t<li className={activeLink === '/learn' ? 'link link-selected' : 'link'} \r\n\t\t  \t\t\t\t\tonClick={() => handleLinkClick('/learn')}>Learn</li>\r\n\t\t  \t\t</Link>\r\n\t\t  \t\t{/*<Link to=\"/play\">\r\n\t\t  \t\t\t<li className={activeLink === '/play' ? 'link link-selected' : 'link'} \r\n\t\t  \t\t\t\t\tonClick={() => handleLinkClick('/play')}>Play</li>\r\n\t\t  \t\t</Link>*/}\r\n\t\t  \t\t{/*<li>Read</li>\r\n\t\t  \t\t<li>Write</li>\r\n\t\t  \t\t<li>Use</li>\r\n\t\t  \t\t<li>Reference</li>\r\n\t\t  \t\t<li>Support</li>*/}\r\n\t\t  \t</ul>\r\n\t\t  </nav>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\n","import './HomeStyle.css';\r\n\r\nexport default function Home() { \r\n\treturn (\r\n\t\t<div class=\"home-container\">\r\n\t\t\t<div class=\"half-box\">\r\n\t      <div> \r\n\t        <h2>Learn Flex Box</h2>\r\n\t        <p>Understand how flex box works with our tutorials.</p>\r\n\t        <p>Memorize what you have learnt with our interactive game.</p>\r\n\t      </div>\r\n\t    </div>\r\n\t    <div class=\"half-box\">\r\n\t      <div class=\"preview-box\"></div>\r\n\t    </div> \r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react';\r\nimport './BurgerStyle.css';\r\n\r\nexport default function Burger({burgerIsOpen, setBurgerIsOpen}) {\r\n\t/*\r\n\t\t* show burger icon\r\n\r\n\t\t* rotate 90deg on click\r\n\r\n\t\t* change color \r\n\t\t\t* over \r\n\t\t\t* animating \r\n\t\t\t* click   \r\n\t*/\r\n\r\n\t// ============================== State ============================= //\r\n\tconst [isOver, setIsOver] = useState(false);\r\n\tconst [isDown, setIsDown] = useState(false);\r\n\tconst [isAnimating, setIsAnimating] = useState(false);\r\n\r\n\t// ============================== Class ============================= //\r\n\tconst [burgerOpenClass, setBurgerOpenClass] = useState('burger-closed');\r\n\tconst [burgerBarClass, setBurgerBarClass] = useState('burger-bar');\r\n\t\r\n\t// ============================== Event Handlers ==================== //\r\n\tfunction handleMouseOver(e) { \r\n\t\tsetIsOver(true)\r\n\t}\r\n\r\n\tfunction handleMouseOut(e) {  \r\n\t\tsetIsOver(false)\r\n\t\tsetIsDown(false)\r\n\t}\r\n\r\n\tfunction handleMouseDown(e) { \r\n\t\tsetIsDown(true)\r\n\t\tsetBurgerIsOpen(oldVal => !oldVal)\r\n\t}\r\n\r\n\tfunction handleMouseUp(e) {  \r\n\t\tsetIsDown(false);\r\n\t} \r\n\r\n\tfunction onTransitionStart(e) { \r\n\t\tif(e.propertyName === 'transform') setIsAnimating(true)\r\n\t}\r\n\r\n\tfunction onTransitionEnd(e) {\r\n\t\tif(e.propertyName === 'transform') setIsAnimating(false)\r\n\t}\r\n\r\n\t// ============================== Detect Transition ==================== //\r\n \tuseEffect(() => {\r\n \t\tconst burgerElement = document.getElementById('burger');\r\n \t\tburgerElement.addEventListener('transitionstart', onTransitionStart)\r\n \t\tburgerElement.addEventListener('transitionend', onTransitionEnd)\r\n \t}, [])\r\n\r\n \t// ============================== Set Classes ============================= //\r\n \t// burger is open\r\n \tuseEffect(() => {\r\n \t\tif(burgerIsOpen) setBurgerOpenClass('burger-open')\r\n \t\tif(!burgerIsOpen) setBurgerOpenClass('burger-closed')\r\n \t}, [burgerIsOpen])\r\n\r\n \t// burger bar colors\r\n\tuseEffect(() => {\r\n\t\tif(isOver && !isDown && !isAnimating) { \r\n\t\t\tsetBurgerBarClass('burger-bar-hover');\r\n\t\t} else if(!isOver && !isDown && !isAnimating) { \r\n\t\t\tsetBurgerBarClass('burger-bar-out');\r\n\t\t} else if(isDown || isAnimating) { \r\n\t\t\tsetBurgerBarClass('burger-bar-down');\r\n\t\t}\r\n\t}, [isOver, isDown, isAnimating]); \r\n\t\r\n\t// ============================== Output ============================= //\r\n\treturn (\r\n\t\t<div className={`burger ${burgerOpenClass}`} id=\"burger\"\r\n\t\t\tonMouseOver={handleMouseOver} onMouseOut={handleMouseOut}\r\n\t\t\tonMouseDown={handleMouseDown} onMouseUp={handleMouseUp}>\r\n\t\t\t\t<div className={`burger-bar ${burgerBarClass}`}></div>\r\n\t\t\t\t<div className={`burger-bar ${burgerBarClass}`}></div>\r\n\t\t\t\t<div className={`burger-bar ${burgerBarClass}`}></div>\r\n\t\t</div> \r\n\t)\r\n} ","import React, {useState, useEffect} from 'react';\r\nimport './BurgerMenu.css';\r\n\r\nexport default function BurgerMenu({isOpen, setIsOpen, options, handleClick}) { \r\n\t/*\r\n\t\t*\tif isOpen show options\r\n\r\n\t\t* if !isOpen don't show options\r\n\r\n\t\t* animate show and hide\r\n\r\n\t\t* if click option call handle click and hide options \r\n\t\r\n\t*/\r\n\r\n\tconst [menuOpenClass, setMenuOpenClass] = useState('burger-menu-closed');\r\n\t\r\n\tfunction onOptionClick(option) {\r\n\t\thandleClick(option)\r\n\t\tsetIsOpen(false)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(isOpen) setMenuOpenClass('burger-menu-open')\r\n\t\tif(!isOpen) setMenuOpenClass('burger-menu-closed')\r\n\t}, [isOpen])\r\n\r\n\treturn ( \r\n\t\t<div className={`burger-menu ${menuOpenClass}`}>\r\n\t\t\t{options && options.map(option => (\r\n\t\t\t\t<h3 className=\"menu-title\" onClick={() => onOptionClick(option)}>\r\n\t\t\t\t\t{option}\r\n\t\t\t\t</h3>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react';\r\nimport './InlineClicker.css';\r\n\r\nexport default function InlineClicker({\r\n\tnewStyle, \r\n\ti, \r\n\tselectedHeader, \r\n\tsetSelectedHeader, \r\n\tsetSelectedStyle, \r\n\tchildren}) {   \r\n\t/*\r\n\t\ton click \r\n\t\t\t* add highlight color\r\n\t\t\t* select this style\r\n\t\r\n\t\ton reclick\r\n\t\t\t* remove highlight color\r\n\t\t\t* revert style\r\n\t*/\r\n\tconst headerName = children; \r\n\r\n\tconst [clickerSelected, setClickerSelected] = useState(false);\r\n\tconst [clickerSelectedClass, setClickerSelectedClass] = useState(null);\r\n\r\n\t// =========================== Event Handlers =========================== //\r\n\tfunction onClick() {\r\n\t\ttoggleSelectedHeader()\r\n\t}\r\n\r\n\tfunction onHeaderSelected() {\r\n\t\tsetClickerSelectedClass('inline-clicker-selected')\r\n\t\tsetSelectedStyle(newStyle)\r\n\t}\r\n\r\n\tfunction onHeaderDeselected() {\r\n\t\tsetClickerSelectedClass('.inline-clicker-not-selected')\r\n\t\tsetSelectedStyle(null)\r\n\t}\r\n\r\n\t// =========================== Helper fns =========================== //\r\n\tfunction toggleSelectedHeader() {\r\n\t\tlet newHeader;\r\n\r\n\t\tif(selectedHeader === headerName) newHeader = '';\r\n\t\tif(selectedHeader !== headerName) newHeader = headerName; \r\n\r\n\t\tsetSelectedHeader(newHeader)\r\n\t} \r\n\r\n\t// =========================== Trigger Selected =========================== //\r\n\tuseEffect(() => {\r\n\t\tif(selectedHeader === headerName) onHeaderSelected() \r\n\t\tif(selectedHeader !== headerName) onHeaderDeselected()\r\n\t}, [selectedHeader])\r\n\r\n\r\n\t// =========================== Outputs =========================== //\r\n\treturn (\r\n\t\t<div className={`inline-clicker ${clickerSelectedClass}`} onClick={onClick}>\r\n\t\t\t{headerName}\r\n\t\t</div>\r\n\t)\r\n}  ","import React, {useState} from 'react';\r\nimport InlineClicker from '../../../parts/InlineClicker/InlineClicker.jsx';\r\nimport {style_1} from './style_1.jsx';\r\n\r\nfunction Text({setSelectedStyle}) {  \r\n\tconst [selectedHeader, setSelectedHeader] = useState(null);\r\n\tconst props = {selectedHeader, setSelectedHeader, setSelectedStyle};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>Setting the display property on an element turns it into a flex container.</p> \r\n\t\t\t<p>You can then use flex properties such as 'justify-content' on the flex container.</p>\r\n\t\t\t<p>Try setting <InlineClicker newStyle={style_1} i=\"1.1\" {...props}>'display: flex;'</InlineClicker> on item_2 to turn it into a flex container.</p>\r\n\t\t\t<p>Once you do this, 'justify-content: center' will be applied, and the text will be centered along the y-axis.</p>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport {Text}","export const style_1 = \r\n`.item_1 { \r\n  display: flex; \r\n  justify-content: center;  \r\n  background: red;  \r\n} \r\n\r\n.item_2 {  \t\r\n  display: flex;\t\r\n  justify-content: center;  \r\n  background: blue; \r\n}`;","import React, {useState, useEffect} from 'react';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport './ClickHeaderStyle.css'; \r\n\r\nexport default function ClickHeader({\r\n\ttitle, \r\n\ti, \r\n\tselectedHeader,\r\n\tsetSelectedHeader, \r\n\tsetSelectedStyle, \r\n\tthisStyle, \r\n\tchildren}) {  \r\n\t/* \r\n\t\t* title, i \r\n\r\n\t\t* show header and icon\r\n\t\t\r\n\t\t* on click icon = toggle body text on / off\r\n\r\n\t\t* on click header = apply header style + add color to header\r\n\t\t* on reclick header = remove header style  + remove color from header\r\n\t*/\r\n\r\n\t// ================================= Ids ============================== // \r\n\tconst playIconId = `play-icon-${i}`;\r\n\tconst childContainerId = `child-container-${i}`; \r\n\tconst headerId = `info-header-${i}`;\r\n\r\n\t// ================================= State ============================== // \r\n\tconst [showChildren, setShowChildren] = useState(false); \r\n\tconst [playIconAnimating, setPlayIconAnimating] = useState(false);\r\n\tconst [containerHeight, setContainerHeight] = useState(null);\r\n\r\n\t// ================================= Class ============================== // \r\n\tconst [playIconClass, setPlayIconClass] = useState('play-icon');\r\n\tconst [headerSelectedClass, setHeaderSelectedClass] = useState('info-header-unselected')\r\n\tconst [showChildrenClass, setShowChildrenClass] = useState('children-init')\r\n\r\n\t// ================================= Event Handlers ============================== // \r\n\tfunction onHeaderClick() {\r\n\t\ttoggleSelectedHeader()\r\n\t}\r\n\r\n\tfunction onIconClick() {\r\n\t\tsetShowChildren(oldVal => !oldVal);\r\n\t\tsetPlayIconAnimating(true);\r\n\t}\r\n\r\n\tfunction handleTransitionEnd(e) { \r\n\t\tif(e.propertyName === 'transform') setPlayIconAnimating(false)\r\n\t}\r\n\r\n\tfunction onShowChildren() {\r\n\t\tsetShowChildrenClass('children-visible') \r\n\t\tsetContainerHeightToFull()\r\n\t}\r\n\r\n\tfunction onHideChildren() {\r\n\t\tsetShowChildrenClass('children-hidden')  \r\n\t\tsetContainerHeightToZero()\r\n\t} \r\n\r\n\tfunction onSelectHeader() {\r\n\t\tsetHeaderSelectedClass('info-header-selected')\r\n\t\tsetSelectedStyle(thisStyle)\r\n\t}\r\n\r\n\tfunction onDeselectHeader() {\r\n\t\tsetHeaderSelectedClass('info-header-unselected')\r\n\t\tsetSelectedStyle(null)\r\n\t}\r\n\r\n\t// ================================= Helper Fns ============================== // \r\n\tfunction getContainerHeight() {\r\n\t\tconst childContainerElement = document.getElementById(childContainerId);\r\n\r\n\t\tconst height = getComputedStyle(childContainerElement).height;\r\n\t\tsetContainerHeight(height)\r\n\t}\r\n\r\n\tfunction setContainerHeightToFull() {\r\n\t\tconst childContainerElement = document.getElementById(childContainerId);\r\n\t\tchildContainerElement.style.height = containerHeight;\r\n\t}\r\n\r\n\tfunction setContainerHeightToZero() {\r\n\t\tconst childContainerElement = document.getElementById(childContainerId);\r\n\t\tchildContainerElement.style.height = 0;\r\n\t} \r\n\r\n\tfunction toggleSelectedHeader() {\r\n\t\tsetSelectedHeader(newVal => {\r\n\t\t\tif(newVal === headerId) return '';\r\n\t\t\treturn headerId;\r\n\t\t})\r\n\t}\r\n\r\n\t// ================================= Detect Transition End ============================== // \r\n\tuseEffect(() => {\r\n\t\tconst playIconElement = document.getElementById(playIconId);\r\n\r\n\t\tif(playIconAnimating) playIconElement.addEventListener('transitionend', handleTransitionEnd)\r\n\t\t\r\n\t\treturn () => { playIconElement.removeEventListener('transitionend', handleTransitionEnd) }\r\n\t}, [playIconAnimating])\r\n\r\n\t// ================================= Get Container Height ============================== //\r\n\tuseEffect(() => {\r\n\t\tgetContainerHeight()\r\n\t}, [])\r\n\r\n\t// ================================= Trigger handlers ============================== //\r\n\t// select header\r\n\tuseEffect(() => { \r\n\t\tif(selectedHeader === headerId) onSelectHeader()\r\n\t\telse onDeselectHeader()\r\n\t}, [selectedHeader])\r\n\r\n\t// show / hide children\r\n\tuseEffect(() => {\r\n\t\tif(showChildren) onShowChildren()\r\n\t\tif(!showChildren) onHideChildren()\r\n\t}, [showChildren])\r\n \r\n\t// ================================= Set Classes ============================== //\r\n\t// play icon\r\n\tuseEffect(() => { \r\n\t\tlet newClass = 'play-icon';\r\n\r\n\t\tif(playIconAnimating) { \r\n\t\t\tnewClass += ' play-icon-animating';\r\n\t\t} \r\n\r\n\t\tif(showChildren) {\r\n\t\t\tnewClass += ' play-icon-selected';\r\n\t\t}\r\n\r\n\t\tsetPlayIconClass(newClass);\r\n\t}, [playIconAnimating, showChildren])\r\n\r\n\t// ================================= Output ============================== //\r\n\treturn (\r\n\t\t<div className='click-header'>\r\n\t\t\t<div className='header-container'> \r\n\t\t\t\t<h2 className={`info-header ${headerSelectedClass}`} \r\n\t\t\t\t\t\tonClick={onHeaderClick} \r\n\t\t\t\t\t\tid={headerId}>{title}</h2>\r\n\t\t\t\t<PlayArrowIcon className={playIconClass} onClick={onIconClick} id={playIconId}/>\r\n\t\t\t</div> \r\n\t\t\t<div className={`child-container ${showChildrenClass}`} id={childContainerId}>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState} from 'react';\r\nimport InlineClicker from '../../../parts/InlineClicker/InlineClicker.jsx';\r\nimport ClickHeader from '../../../parts/ClickHeader/ClickHeader.jsx';\r\nimport {style_1} from './style_1.jsx';\r\nimport {style_2} from './style_2.jsx';\r\nimport {style_3} from './style_3.jsx';\r\nimport {style_4} from './style_4.jsx';\r\nimport {style_5} from './style_5.jsx'; \r\nimport {style_6} from './style_6.jsx';\r\n\r\nfunction Text({setSelectedStyle}) {  \r\n\tconst [selectedHeader, setSelectedHeader] = useState(null);\r\n\tconst props = {selectedHeader, setSelectedHeader, setSelectedStyle};\r\n\r\n\treturn (\r\n\t\t<div> \r\n\t\t\t<p>Use 'justify-content' to control where child elements are placed along the x-axis of the flex container and where text is placed along the x-axis of the content area of the flex container.</p>\r\n\r\n\t\t\t<p>Any<InlineClicker i=\"2.1\" thisStyle={style_1} {...props}> padding you add to an element</InlineClicker> will be outside of the content area, and so will add space between any text and the edge of the element.</p>   \r\n\r\n\t\t\t<ClickHeader i=\"2.2\" thisStyle={style_2} {...props} title=\"justify-content: flex-start; (default)\"> \r\n\t\t\t\t<p>Child elements and text will be placed at the start of the x-axis.</p>\r\n\t\t\t\t<p>Text will be placed at the start of the x-axis of the content area.</p> \r\n\t\t\t</ClickHeader> \r\n\t\t\t\r\n\t\t\t<ClickHeader i=\"2.3\" thisStyle={style_3} {...props} title=\"justify-content: start;\"> \r\n\t\t\t\t<p>Child elements will be placed at the start of writing-mode direction.</p>\r\n\t\t\t\t<p>Text will be placed at the start of the writing-mode direction of the content area.</p>\r\n\t\t\t\t<p>If writing mode is from right to left, the start of the writing-mode direction will be the left side.</p> \r\n\t\t\t</ClickHeader> \r\n \r\n\t\t\t<ClickHeader i=\"2.4\" thisStyle={style_4} title=\"justify-content: space-between;\" {...props}>\r\n\t\t\t\t<p>Child elements will be spread out across the x-axis.</p>\r\n\t\t\t\t<p>The first and last child elements will touch the edges of the x-axis.</p>\r\n\t\t\t\t<p>Space will be added between the other child elements along the x-axis.</p>\r\n\t \t\t\t<p>Text is not affected.</p>\r\n \t\t\t</ClickHeader> \r\n\r\n \t\t\t<ClickHeader i=\"2.5\" thisStyle={style_5} title=\"justify-content: space-around;\" {...props}>\r\n\t \t\t\t<p>Child elements will be spread out across the x-axis.</p>\r\n\t\t\t\t<p>Each child element will have the same amount of space added to the left and right of the child.</p>\r\n\t\t\t\t<p>This means the spaces between the first and last children and the edges of the flex container will be half the size as the spaces between the child elements.</p>\r\n\t \t\t\t<p>Text is not affected.</p>\r\n \t\t\t</ClickHeader> \r\n\r\n \t\t\t<ClickHeader i=\"2.6\" thisStyle={style_6} title=\"justify-content: space-evenly;\" {...props}>\r\n\t\t\t\t<p>Child elements will be spread out across the x-axis.</p>\r\n\t\t\t\t<p>The space will be distributed to give an evenly spaced appearence.</p>\r\n\t\t\t\t<p>The spacse between the edges of the flex container and the first and last child elements will be the same size as the spaces between the child elements.</p>\r\n\t\t\t\t<p>Text is not affected.</p>\r\n\t\t\t</ClickHeader>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport {Text}","export const style_1 = \r\n`.container {\r\n  display: flex;  \r\n\r\n}\r\n\r\n.item { \r\n  min-width: 2.5em;\r\n  min-height: 2.5em;\r\n  padding: 1em;\r\n}\r\n\r\n.item_1 {\r\n  background: blue;\r\n}\r\n\r\n.item_2 {\r\n  background: red;\r\n}\r\n\r\n.item_3 {\r\n  background: yellow;\r\n}\r\n\r\n.item_4 {\r\n  background: green;\r\n}`;","export const style_2 = \r\n`.container {\r\n  display: flex;  \r\n  justify-content: flex-start;\r\n}\r\n\r\n.item { \r\n  min-width: 2.5em;\r\n  min-height: 2.5em;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.item_1 {\r\n  background: blue;\r\n}\r\n\r\n.item_2 {\r\n  background: red;\r\n}\r\n\r\n.item_3 {\r\n  background: yellow;\r\n}\r\n\r\n.item_4 {\r\n  background: green;\r\n}`;","export const style_3 = \r\n`.container {\r\n  display: flex;  \r\n  justify-content: start;\r\n}\r\n\r\n.item { \r\n  min-width: 2.5em;\r\n  min-height: 2.5em;\r\n  justify-content: start;\r\n  writing-mode: vertical-rl;\r\n}\r\n\r\n.item_1 {\r\n  background: blue;\r\n}\r\n\r\n.item_2 {\r\n  background: red;\r\n}\r\n\r\n.item_3 {\r\n  background: yellow;\r\n}\r\n\r\n.item_4 {\r\n  background: green;\r\n}`;","export const style_4 = \r\n`.container {\r\n  display: flex;  \r\n  justify-content: space-between;\r\n}\r\n\r\n.item { \r\n  min-width: 2.5em;\r\n  min-height: 2.5em;\r\n  justify-content:  space-between;\r\n}\r\n\r\n.item_1 {\r\n  background: blue;\r\n}\r\n\r\n.item_2 {\r\n  background: red;\r\n}\r\n\r\n.item_3 {\r\n  background: yellow;\r\n}\r\n\r\n.item_4 {\r\n  background: green;\r\n}`;","export const style_5 = \r\n`.container {\r\n  display: flex;  \r\n  justify-content: space-around;\r\n}\r\n\r\n.item { \r\n  min-width: 2.5em;\r\n  min-height: 2.5em;\r\n  justify-content:  space-around;\r\n}\r\n\r\n.item_1 {\r\n  background: blue;\r\n}\r\n\r\n.item_2 {\r\n  background: red;\r\n}\r\n\r\n.item_3 {\r\n  background: yellow;\r\n}\r\n\r\n.item_4 {\r\n  background: green;\r\n}`;","export const style_6 = \r\n`.container {\r\n  display: flex;  \r\n  justify-content: space-evenly;\r\n}\r\n\r\n.item { \r\n  min-width: 2.5em;\r\n  min-height: 2.5em;\r\n  justify-content:  space-evenly;\r\n}\r\n\r\n.item_1 {\r\n  background: blue;\r\n}\r\n\r\n.item_2 {\r\n  background: red;\r\n}\r\n\r\n.item_3 {\r\n  background: yellow;\r\n}\r\n\r\n.item_4 {\r\n  background: green;\r\n}`;","import React from 'react';\r\n\r\nimport {Text as Text_1} from './../data/learn/Level_1/text.jsx';\r\nimport {Text as Text_2} from './../data/learn/Level_2/text.jsx';\r\n/*import Text_3 from './../data/text/Text_3.jsx';\r\nimport Text_4 from './../data/text/Text_4.jsx';\r\nimport Text_5 from './../data/text/Text_5.jsx';\r\nimport Text_6 from './../data/text/Text_6.jsx';\r\nimport Text_7 from './../data/text/Text_7.jsx';\r\nimport Text_8 from './../data/text/Text_8.jsx';\r\nimport Text_9 from './../data/text/Text_9.jsx';\r\nimport Text_10 from './../data/text/Text_10.jsx';\r\nimport Text_11 from './../data/text/Text_11.jsx';\r\nimport Text_12 from './../data/text/Text_12.jsx';\r\nimport Text_13 from './../data/text/Text_13.jsx';*/\r\n\r\n\r\nexport default function Text({levelNum, setSelectedStyle}) {  \r\n\tconst allText = [\r\n\t\tText_1,\r\n\t\tText_2,\r\n\t\t/*Text_3,\r\n\t\tText_4,\r\n\t\tText_5,\r\n\t\tText_6,\r\n\t\tText_7,\r\n\t\tText_8,\r\n\t\tText_9,\r\n\t\tText_10,\r\n\t\tText_11,\r\n\t\tText_12,\r\n\t\tText_13,*/\r\n\t];\r\n\r\n\tconst ThisText = allText[levelNum];  \r\n\r\n\treturn <ThisText setSelectedStyle={setSelectedStyle}/>\r\n}","// ================ trigger fn on transition start and end, one time\r\nexport function onTransition(id, propertyName, onStart = null, onEnd = null) {\r\n\tconst element = document.getElementById(id); \r\n\r\n\tconst thisStartFn = transitionStartHandler.bind(null, id, propertyName, onStart);\r\n\tconst thisEndFn = transitionEndHandler.bind(null, element, id, propertyName, onStart, onEnd);\r\n\r\n\telement.addEventListener('transitionstart', thisStartFn, {once: true})\r\n\telement.addEventListener('transitionend', thisEndFn, {once: true})\r\n}\r\n\r\nfunction transitionStartHandler(id, propertyName, onStart, e) { \r\n\tif(e.propertyName === propertyName && e.srcElement.id === id) {\r\n\t\tonStart && onStart()\r\n\t}\r\n}\r\n\r\nfunction transitionEndHandler(element, id, propertyName, onStart, onEnd, e) {\r\n\tif(e.propertyName === propertyName && e.srcElement.id === id) { \r\n\t\tonEnd && onEnd() \r\n\t}\r\n}\r\n\r\n// ================ check if overflowing\r\nexport function elementWidthIsOverflowing(id) {\r\n\tconst element = document.getElementById(id);\r\n\treturn element.scrollWidth > element.clientWidth;\r\n}\r\n\r\nexport function elementHeightIsOverflowing(id) {\r\n\tconst element = document.getElementById(id);\r\n\treturn element.scrollHeight > element.clientHeight;\r\n}\r\n\r\nexport function elementHasInlineSize(id) {\r\n\tconst element = document.getElementById(id); \r\n\r\n\treturn !(element.style.width === '' && element.style.height === '');\r\n}\r\n\r\nexport function removeInlineSize(id) { \r\n\tconst element = document.getElementById(id);  \r\n\telement.style.width = '';\r\n\telement.style.height = ''; \r\n}\r\n\r\nexport function setToElementSize(idOne, idTwo) {\r\n\tconst elementOne = document.getElementById(idOne);\r\n\tconst elementTwo = document.getElementById(idTwo);  \r\n\r\n\tconst elementTwoStyle = window.getComputedStyle(elementTwo);  \r\n\r\n\telementOne.style.width = elementTwoStyle.width;\r\n\telementOne.style.height = elementTwoStyle.height;\r\n}\r\n\r\n/*export function setToCurrentSize(id) {\r\n\tconst element = document.getElementById(id);\r\n\telement.style.width = getElementWidth(element);\r\n\telement.style.height = getElementHeight(element);\r\n}\r\n\r\nexport function setToParentSize(id) {\r\n\tconst element = document.getElementById(id)\r\n\tconst parentElement = element.parentNode; \r\n\r\n\telement.style.width =\tgetElementWidth(parentElement);\r\n\telement.style.height = getElementHeight(parentElement);\r\n}*/\r\n\r\n/* ------------ */\r\n\r\nexport function detectTransition(id, propertyName, onChange) {\r\n\tlet element = document.getElementById(id);\r\n\tif(!element) {\r\n\t\tconsole.log('Error: detectTransition element not found: id = ', id)\r\n\t\treturn;\r\n\t}  \r\n\r\n\telement.addEventListener('transitionstart', (e) => {\r\n\t\tif(e.propertyName === propertyName && e.srcElement.id === id) {\r\n\t\t\tonChange(true)\r\n\t\t}\r\n\t})\r\n\r\n \telement.addEventListener('transitionend', (e) => { \r\n\t\tif(e.propertyName === propertyName && e.srcElement.id === id) {\r\n\t\t\tonChange(false)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nexport function detectTransitions(id, propertyNames, onChange) {\r\n\t// console.log('detectTransitions ===========================')\r\n\t// console.log('propertyNames', propertyNames)\r\n\tpropertyNames.forEach(propertyName => {\r\n\t\t// console.log('propertyName', propertyName)\r\n\t\taddListeners(id, propertyName, onChange)\r\n\t})\r\n}\r\n\r\nfunction addListeners(id, propertyName, onChange) {\r\n\tlet element = document.getElementById(id);\r\n\tlet numTransitions = 0; \r\n\r\n\tif(!element) {\r\n\t\tconsole.log('Error: detectTransition element not found: id = ', id)\r\n\t\treturn;\r\n\t}   \r\n\t\r\n\telement.addEventListener('transitionstart', (e) => {\r\n\t\t\r\n\t\tif(e.propertyName === propertyName && e.srcElement.id === id) { \r\n\t\t\tnumTransitions += 1;\r\n\t\t\tif(numTransitions === 1) onChange(true)\r\n\t\t}\r\n\t})\r\n\r\n \telement.addEventListener('transitionend', (e) => {\r\n\t\tif(e.propertyName === propertyName && e.srcElement.id === id) { \r\n\t\t\t// console.log(e) \r\n\t\t\tnumTransitions -= 1;\r\n\t\t\tif(numTransitions === 0) onChange(false)\r\n\t\t}\r\n\t})\r\n}","import React, {useState, useEffect} from 'react';\r\nimport './OpenCloseToggleStyle.css';\r\nimport {detectTransition} from './../../utils.js';\r\n\r\nexport default function OpenCloseToggle({\r\n\ttoggleIsOpen = false, \r\n\tparentIsAnimating = false, \r\n\thandleClick = () => { console.log('no function passed to OpenCloseToggle')}, \r\n\ti = 0}) { \r\n\t// ================== Ids ================== //\r\n\tconst vertLineId = 'vert-line-' + i;\r\n\tconst horizLineId = 'horiz-line-' + i;\r\n\tconst openCloseToggleId = 'open-close-toggle' + i;\r\n\r\n\t// ================== Status ================== //\r\n\tconst [lineIsAnimating, setLineIsAnimating] = useState(false);\r\n\tconst [cursorLocation, setCursorLocation] = useState('');\r\n\tconst [cursorStatus, setCursorStatus] = useState(''); \r\n\tconst [isAnimating, setIsAnimating] = useState(false);\r\n\r\n\t// ================== Classes ================== //\r\n\tconst [lineDirectionClass, setLineDirectionClass] = useState(toggleIsOpen ? 'line-open' : 'line-closed');\r\n\tconst [lineColorClass, setLineColorClass] = useState('line-out');\r\n\r\n\t// ================== Event Handlers ================== //\r\n\tfunction handleDown() {\r\n\t\thandleClick();\r\n\t\tsetCursorStatus('down'); \r\n\t}\r\n\r\n\tfunction handleUp() {\r\n\t\tsetCursorStatus('up'); \r\n\t}\r\n\r\n\tfunction handleOver() {\r\n\t\tsetCursorLocation('over');\r\n\t}\r\n\r\n\tfunction handleOut(e) {  \r\n\t\tif(e.target.id !== vertLineId && e.target.id !== horizLineId &&\r\n\t\t\te.relatedTarget.id !== vertLineId && e.relatedTarget.id !== horizLineId) { \r\n\t\t\tsetCursorLocation('out'); \r\n\t\t\tsetCursorStatus(''); \r\n\t\t}\r\n\t} \r\n\r\n\t// ================== Detect Events ================== //\r\n\tuseEffect(() => {\r\n\t\tdetectTransition(vertLineId, 'transform', setLineIsAnimating)\r\n\t}, [])\r\n\r\n\t// ================== Set Classes ================== //\r\n\t// ========== Line Color Class //\r\n\tuseEffect(() => {\t\r\n\t\t// cursor\r\n\t\tif(cursorLocation === 'over' && cursorStatus === '') {\r\n\t\t\tsetLineColorClass('line-over');\r\n\t\t} else if(cursorLocation === 'out' && !isAnimating) {\r\n\t\t\tsetLineColorClass('line-out');\r\n\t\t} else if(cursorLocation === 'over' && cursorStatus === 'up') {\r\n\t\t\tsetLineColorClass('line-up');\r\n\t\t} else if(cursorStatus === 'down' && cursorLocation === 'over') {\r\n\t\t\tsetLineColorClass('line-down'); \r\n\t\t}\r\n\r\n\t \tif(isAnimating && cursorLocation === 'out') {\r\n\t\t\tsetLineColorClass('line-animating');\r\n\t\t} \r\n\t}, [cursorStatus, cursorLocation, isAnimating])\r\n\r\n\t// ========== Line direction class //\r\n\tuseEffect(() => {\r\n\t\tif(toggleIsOpen) {\r\n\t\t\tsetLineDirectionClass('line-open');\r\n\t\t} else {\r\n\t\t\tsetLineDirectionClass('line-closed');\r\n\t\t} \r\n\t}, [toggleIsOpen]);\r\n\r\n\t// ================== Set Status ================== //\r\n\tuseEffect(() => {\r\n\t\tif(parentIsAnimating || lineIsAnimating) {\r\n\t\t\tsetIsAnimating(true)\r\n\t\t} else {\t\r\n\t\t\tsetIsAnimating(false)\r\n\t\t}\r\n\t}, [parentIsAnimating, lineIsAnimating])\r\n\r\n\t// ================== Console logs ================== //\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('lineIsAnimating', lineIsAnimating)\r\n\t// }, [lineIsAnimating])\r\n\r\n\t// ================== Componenet ================== //\r\n\treturn (\r\n\t\t<div className=\"open-close-toggle\" \t\r\n\t\t\tid={openCloseToggleId}\r\n\t\t\tonMouseOver={handleOver}\r\n\t\t\tonMouseOut={handleOut}\r\n\t\t\tonMouseDown={handleDown}\r\n\t\t\tonMouseUp={handleUp}>\r\n\t\t\t<div className={`line ${lineColorClass}`} id={horizLineId}></div>\r\n\t\t\t<div className={`line ${lineColorClass} ${lineDirectionClass}`} id={vertLineId}></div>\r\n\t\t</div> \r\n\t)\r\n}\r\n\r\n/* ==================== Bin\r\n\t/*const [lineColorClass, setLineColorClass] = useState('');\r\n\tconst [lineAnimationClass, setLineAnimationClass] = useState('');\r\n\r\n\tconst [animationStatus, setAnimationStatus] = useState('');\r\n\r\n\tconst [cursorLocation, setCursorLocation] = useState('out')\r\n\tconst [cursorStatus, setCursorStatus] = useState('up');\r\n\r\n\tconst openingDelay = 1000;\r\n\tconst closingDelay = 0;\r\n\tconst animationTime = 1000;\r\n\r\n\tfunction handleOver() {\r\n\t\tsetCursorLocation('over');\r\n\t}\r\n\r\n\tfunction handleOut() {\r\n\t\tsetCursorLocation('out');\r\n\t\tsetCursorStatus('up');\r\n\t}\r\n\r\n\tfunction handleDown() {\r\n\t\thandleClick();\r\n\t\tsetCursorStatus('down');\t \r\n\t\tanimate();\r\n\t}\r\n\r\n\tfunction handleUp() {\r\n\t\tsetCursorStatus('up');\r\n\t}\r\n\r\n\tfunction animate() {\r\n\t\tconst newStatus = isOpen ? 'closing' : 'opening';\r\n\t\tsetAnimationStatus(newStatus);\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetAnimationStatus('');\r\n\t\t}, animationDelay + animationTime)\r\n\t}\r\n\r\n\tuseEffect(() => { \r\n\t\tlet newLineColorClass = '';  \r\n\r\n\t\t// over\r\n\t\tif(cursorLocation === 'over') {\r\n\t\t\tif(cursorStatus === 'up') {\r\n\t\t\t\tnewLineColorClass = 'line-over';\r\n\t\t\t// down\r\n\t\t\t} else if(cursorStatus === 'down') {\r\n\t\t\t\tnewLineColorClass = 'line-down';\r\n\t\t\t}\r\n\t\t// out\r\n\t\t}/* else {\r\n\t\t\tif(animationStatus === 'opening' || animationStatus === 'closing') {\r\n\t\t\t\tnewLineColorClass = 'line-animating ';\r\n\t\t\t} \r\n\t\t} \r\n\r\n\t\tsetLineColorClass(newLineColorClass);\r\n\t}, [cursorStatus, cursorLocation, animationStatus])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(animationStatus === 'closing') {\r\n\t\t\tsetLineAnimationClass('line-closing');\r\n\t\t} else if (animationStatus === 'opening') {\r\n\t\t\tsetLineAnimationClass('line-opening');\r\n\t\t} \r\n\t}, [animationStatus])*/\r\n\r\n\t{/* \r\n\t\tonMouseOver={handleOver}\r\n\t\t\tonMouseOut={handleOut}\r\n\t\t\t\r\n\t\t\tonMouseUp={handleUp}\r\n\r\n\t\t\t${lineColorClass}\r\n\t*/}","import React, {useState, useEffect} from 'react'; \r\nimport OpenCloseToggle from './../OpenCloseToggle/OpenCloseToggle.jsx'; \r\nimport './OpenCloseBox.css';\r\n\r\nexport default function OpenCloseBox({\r\n\ttitle = '',\r\n\ti,\r\n\tboxBodyId = null,\r\n\tcontentContainerId = null,\r\n\tbuttons = [],   \r\n\thandleToggleClick = () => {},\r\n\thandleOverflowHidden = () => {},\r\n\tsetContentContainerStatus = () => {}, \r\n\tchildren\r\n}) {  \r\n\t/*\r\n\t\t* show title   \t\r\n\t\t* show buttons  \r\n\t\t* show open close toggle\r\n\r\n\t\t* on press open close toggle\r\n\t\t\t* close overflow the close box\r\n\t\t\t* show width bar on open\r\n\r\n\t\t\t* open box to previous size \r\n\t*/\r\n\r\n\t// =========================== Id's ============================ //\r\n\tconst boxId = `box-${i}`;\r\n\tif(!boxBodyId) boxBodyId = `box-body-${i}`;\r\n\tif(!contentContainerId) contentContainerId = `content-container-${i}`;\r\n\tconst displayContainerId = `display-container-${i}`;\r\n\r\n\t// ======================= State ======================= // \r\n\tconst [clickedOpen, setClickedOpen] = useState(null);\r\n\tconst [boxIsOpen, setBoxIsOpen] = useState(true);\r\n\r\n\tconst [isAnimating, setIsAnimating] = useState(false);\r\n\tconst [toggleIsOpen, setToggleIsOpen] = useState(false);\r\n\r\n\tconst [widthOverflowOnClose, setWidthOverflowOnClose] = useState(false);\r\n\tconst [heightOverflowOnClose, setHeightOverflowOnClose] = useState(false);\r\n\tconst [savedHeight, setSavedHeight] = useState(null);\r\n\r\n\tconst [widthIsOverflowing, setWidthIsOverflowing] = useState(false);\r\n\tconst [heightIsOverflowing, setHeightIsOverflowing] = useState(false);\r\n\tconst [overflowIsShrinking, setOverflowIsShrinking] = useState(false);\r\n\r\n\tconst [boxWidthTransitionHasEnded, setBoxWidthTransitionHasEnded] = useState(false);\r\n\r\n\t// ======================= Classes ======================= //\r\n\tconst [boxOpenClass, setBoxOpenClass] = useState('box-open');\r\n\tconst [contentContainerOpenClass, setContentContainerOpenClass] = useState('content-container-open');\r\n\r\n\t// ======================= Event Handlers ======================= //\r\n\tfunction onClickOpenCloseToggle() {\r\n\t\tif(!isAnimating) {\r\n\t\t\tlet newValue;\r\n\r\n\t\t\tif(clickedOpen === null) newValue = false;\r\n\t\t\tif(clickedOpen === false) newValue = true;\r\n\t\t\tif(clickedOpen === true) newValue = false;\r\n\r\n\t\t\tsetClickedOpen(newValue) \r\n\t\t\thandleToggleClick(newValue, elementWidthIsOverflowing(boxBodyId), elementHeightIsOverflowing(boxBodyId))\r\n\t\t} \r\n\t} \r\n\r\n\tfunction onPressBoxOpening() { \r\n\t\tsetIsAnimating(true)\r\n\t\tsetBoxOpenClass('box-open')\r\n\t\t\r\n\t\tif(widthOverflowOnClose) setContentContainerOpenClass('content-container-opening-x')\r\n\t\tif(!widthOverflowOnClose) setContentContainerOpenClass('content-container-opening-x-max-width')\r\n\t\tremoveInlineWidth(contentContainerId)\r\n\t\taddListeners(boxId, 'width', () => { setBoxWidthTransitionHasEnded(true) })\r\n\t}\r\n\r\n\tfunction onPressBoxClosing() { \r\n\t\tsetIsAnimating(true)\r\n\t\t\r\n\t\tif(boxIsOpen) {\r\n\t\t\tconst thisWidthIsOverflowing = elementWidthIsOverflowing(boxBodyId);\r\n\t\t\tsetWidthOverflowOnClose(thisWidthIsOverflowing) \r\n\r\n\t\t\tconst thisHeightIsOverflowing = elementHeightIsOverflowing(boxBodyId);\r\n\t\t\tsetHeightOverflowOnClose(thisHeightIsOverflowing)\r\n\t  \r\n\t\t\tif(thisWidthIsOverflowing || thisHeightIsOverflowing) setOverflowIsShrinking(true)\r\n\t\t\tif(thisWidthIsOverflowing) closeWidthOverflow()\r\n\t\t\tif(thisHeightIsOverflowing) {\r\n\t\t\t\tsaveHeight(contentContainerId)\r\n\t\t\t\tcloseHeightOverflow() \r\n\t\t\t}\r\n\r\n\t\t\tif(!thisWidthIsOverflowing && !thisHeightIsOverflowing) onBoxClosing() \r\n\t\t}\r\n\r\n\t\tif(!boxIsOpen) {\r\n\t\t\tonBoxClosing() \r\n\t\t}\r\n\t}\r\n\r\n\tfunction onBoxClosing() { \r\n\t\tsetBoxIsOpen(false)\r\n\t\tsetBoxOpenClass('box-closed')\r\n\t\tsetContentContainerOpenClass('content-container-closing-x')\r\n\t\taddListeners(boxId, 'width', () => onBoxClosed())\r\n\t}\r\n\r\n\tfunction onBoxWidthOpen() { \r\n\t\tsetToggleIsOpen(false)\r\n\t\taddListeners(contentContainerId, 'min-height', () => { onContentContainerOpen() })\r\n\r\n\t\tif(heightOverflowOnClose) {\r\n\t\t\tsetHeightTo(contentContainerId, '0') \r\n\t\t\tsetHeightTo(contentContainerId, savedHeight)\r\n\t\t\tsetContentContainerOpenClass('content-container-opening-y')\r\n\t\t}\r\n\r\n\t\tif(!heightOverflowOnClose) {\r\n\t\t\tsetHeightTo(contentContainerId, '0') \r\n\t\t\tsetHeightToFull(contentContainerId, boxBodyId)\r\n\t\t\tsetContentContainerOpenClass('content-container-opening-y')\r\n\t\t}\r\n\t} \r\n\r\n\tfunction onContentContainerOpen() { \r\n\t\tsetIsAnimating(false)\r\n\t\tremoveInlineHeight(contentContainerId)\r\n\t\tsetContentContainerOpenClass('content-container-open')\r\n\t}\r\n\r\n\tfunction onContentContainerClosed() { \r\n\t\tsetIsAnimating(false)\r\n\t}\r\n\r\n\tfunction onBoxClosed() {\r\n\t\tsetToggleIsOpen(true)\r\n\t\tsetContentContainerOpenClass('content-container-closing-y')\r\n\t\taddListeners(contentContainerId, 'height', () => { onContentContainerClosed() })\r\n\t}\r\n\r\n\tfunction onOverflowClosed() { \r\n\t\tonBoxClosing()\r\n\t\thandleOverflowHidden()\r\n\t}\r\n\r\n\t// ======================= Helper Fns ========================== //  \r\n\tfunction addListeners(id, property, fn) { \r\n\t\tconst element = document.getElementById(id);\r\n\r\n\t\tfunction handleEnd(e) {\r\n\t\t\tif(e.propertyName === property && e.srcElement.id === id) {\r\n\t\t\t\tfn()\r\n\t\t\t\telement.removeEventListener('transitionend', handleEnd)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telement.addEventListener('transitionend', handleEnd)\r\n\t}\r\n\r\n\tfunction removeInlineHeight(id) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\telement.style.height = '';\r\n\t}\r\n\r\n\tfunction removeInlineWidth(id) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\telement.style.width = '';\r\n\t}\r\n\r\n\tfunction closeWidthOverflow() {\r\n\t\tsetWidthIsOverflowing(true)\r\n\t\taddListeners(contentContainerId, 'width', () => { setWidthIsOverflowing(false)})\r\n\t\tkeepWidth(contentContainerId)\r\n\t\tsetWidthToFull(contentContainerId, boxBodyId)\r\n\t\tsetContentContainerOpenClass('content-container-closing-overflow') \r\n\t}\r\n\r\n\tfunction closeHeightOverflow() {\r\n\t\tsetHeightIsOverflowing(true)\r\n\t\taddListeners(contentContainerId, 'height', () => { setHeightIsOverflowing(false)})\r\n\t\tkeepHeight(contentContainerId)\r\n\t\tsetHeightToFull(contentContainerId, boxBodyId)\r\n\t\tsetContentContainerOpenClass('content-container-closing-overflow')\r\n\t}\r\n\r\n\tfunction keepWidth(id) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\tconst width = element.clientWidth + 'px';\r\n \r\n\t\telement.style.width = width; \r\n\t}\r\n\r\n\tfunction keepHeight(id) {\r\n\t\tconst element = document.getElementById(id);  \r\n\t\tconst height = element.offsetHeight + 'px';  \r\n\t\telement.style.height = height;\r\n\t}\r\n\r\n\tfunction saveHeight(id) {\r\n\t\tconst element = document.getElementById(id);  \r\n\t\tconst height = element.offsetHeight + 'px';   \r\n\t\tsetSavedHeight(height)\r\n\t}\r\n\r\n\tfunction setHeightTo(id, height) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\telement.style.height = height;\r\n\t}\r\n\r\n\tfunction setHeightToFull(id, heightId) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\tconst heightElement = document.getElementById(heightId); \r\n\t\tconst height = heightElement.clientHeight;  \r\n\t\telement.style.height = height + 'px';\r\n\t}\r\n\r\n\tfunction setWidthToFull(id, widthId) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\tconst widthElement = document.getElementById(widthId); \r\n\t\tconst width = widthElement.offsetWidth; \r\n\t\telement.style.width = width + 'px';\r\n\t}\r\n\r\n\tfunction elementWidthIsOverflowing(id) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\tif(!element) return;\r\n\r\n\t  return element.scrollWidth > element.clientWidth;\r\n\t}\r\n\r\n\tfunction elementHeightIsOverflowing(id) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\tif(!element) return;\r\n\r\n\t  return element.scrollHeight > element.clientHeight;\r\n\t}\r\n\r\n\tfunction checkIfOverflowing(id) {\r\n\t\treturn elementWidthIsOverflowing(id) || elementHeightIsOverflowing(id);\r\n\t}\r\n\r\n\t// ======================= Event Detects ======================= //\r\n\t// toggle click triggers\r\n\tuseEffect(() => {\r\n\t\tif(clickedOpen === true) onPressBoxOpening()\r\n\t\tif(clickedOpen === false) onPressBoxClosing()\r\n\t\tif(clickedOpen === null) onContentContainerOpen()\r\n\t}, [clickedOpen]) \r\n\r\n\t// detect box resized\r\n\tuseEffect(() => {\r\n\t\tif(overflowIsShrinking) {\r\n\t\t\tif(!widthIsOverflowing && !heightIsOverflowing) { \r\n\t\t\t\tonOverflowClosed()\r\n\t\t\t\tsetOverflowIsShrinking(false)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [overflowIsShrinking, widthIsOverflowing, heightIsOverflowing])\r\n\r\n\t// detect box open \r\n\tuseEffect(() => { \r\n\t\tif(clickedOpen && boxWidthTransitionHasEnded) {\r\n\t\t\tonBoxWidthOpen()\r\n\t\t\tsetBoxWidthTransitionHasEnded(false)\r\n\t\t\tsetBoxIsOpen(true)\r\n\t\t}\r\n\t}, [clickedOpen, boxWidthTransitionHasEnded])\r\n\r\n\t// =========================== Output ============================ //\r\n\treturn (\r\n\t\t<div className={`box ${boxOpenClass}`} id={boxId}>\r\n\t\t\t<div className=\"box-header\">\r\n\t\t\t\t<div className=\"box-buttons-container\">\r\n\t\t\t\t\t{buttons.map(button => button)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"title\">{title}</div>\r\n\r\n\t\t\t\t<div className=\"open-close-toggle-container\">\r\n\t\t\t\t\t<OpenCloseToggle \t\r\n\t\t\t\t\t\thandleClick={onClickOpenCloseToggle}\r\n\t\t\t\t\t\ttoggleIsOpen={toggleIsOpen}\r\n\t\t\t\t\t\tparentIsAnimating={isAnimating}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={`box-body`} id={boxBodyId}> \r\n\t\t\t\t<div className={`content-container ${contentContainerOpenClass}`} id={contentContainerId}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Burger from './Burger/Burger.jsx';\r\nimport BurgerMenu from './Burger/BurgerMenu.jsx';\r\nimport Text from './Text.jsx';\r\nimport OpenCloseBox from './OpenCloseBox/OpenCloseBox.jsx'; \r\nimport './LevelText.css';\r\n\r\nexport default function LevelText({\r\n\ti, \r\n\ttitles, \r\n\tlevelNum, \r\n\tsetLevelNum, \r\n\tsetStyle, \r\n\tdefaultStyle\r\n}) {\r\n\t/*\r\n\t\t* show title\r\n\t\t\r\n\t\t* show text\r\n\r\n\t\t* when new style selected change css string\r\n\t\t* when new style unselected change back css string\r\n\r\n\t\t* burger\r\n\t\t\t* show all titles when clicked\r\n\r\n\t\t\t* change level and close when click title\r\n\r\n\t\tanimate on open / close box\r\n\t\t\t* full\r\n\t\t\t* when press before closed\r\n\t\t\t* make so no bottom scroll\r\n\t\t\tmake so has vert scroll - make content box expand \r\n\r\n\t\tfix - adjust width when box size changes\r\n\t\t\tthis\r\n\t\t\tother boxes\r\n\t*/\r\n\t// ======================================= Ids ======================================= //\r\n\tconst textContainerId = `text-container-${i}`;\r\n\tconst textBodyId = `text-body-${i}`;\r\n\r\n\t// ======================================= State ======================================= //\r\n\tconst [burgerIsOpen, setBurgerIsOpen] = useState(false);\r\n\tconst buttons = [<Burger burgerIsOpen={burgerIsOpen} setBurgerIsOpen={setBurgerIsOpen}/>]; \r\n \r\n\tconst [title, setTitle] = useState(titles[levelNum]);\r\n\tconst [selectedStyle, setSelectedStyle] = useState('');\r\n\r\n\t// const [boxHasClosed, setBoxHasClosed] = useState(false);\r\n\r\n\t// ======================================= Class ======================================= //\r\n\tconst [textBodyOpenClass, setTextBodyOpenClass] = useState('');\r\n\t// const [boxStatus, setBoxStatus] = useState('');\r\n\t// const [overflowOpenClass, setOverflowOpenClass] = useState('');\r\n\r\n\t// ======================================= Event Handlers ================================== //\r\n\tfunction handleBurgerClick(option) { \r\n\t\tconst newLevelNum = titles.indexOf(option);\r\n\t\tsetLevelNum(newLevelNum)\r\n\t}\r\n\r\n\tfunction handleToggleClick(boxIsOpen, widthIsOverflowing, heightIsOverflowing) {\r\n\t\tconsole.log('toggle clicked === level text')\r\n\t\tconsole.log('heightIsOverflowing', heightIsOverflowing)\r\n\t\tif(boxIsOpen) onBoxOpening()\r\n\t\tif(!boxIsOpen) onBoxClosing(heightIsOverflowing) \r\n\t}\r\n\r\n\tfunction onOverflowHidden() {\r\n\t\tsetTextBodyOpenClass('text-body-closing-overflow-hidden')\r\n\t}\r\n\r\n\tfunction onBoxClosing(heightIsOverflowing) { \r\n\t\tfixContainerWidth(textBodyId)\r\n\t\tif(!heightIsOverflowing) setTextBodyOpenClass('text-body-closing-no-overflow')\r\n\t}\r\n\r\n\tfunction onBoxOpening() {\r\n\t\tremoveInlineWidth(textBodyId)\r\n\t\tsetTextBodyOpenClass('text-body-opening')\r\n\t}\r\n\r\n\t/*function onBoxOpening() { \r\n\t\tif(boxHasClosed) resetContainerWidth()\r\n\t} \r\n\r\n\tfunction onBoxOpen() {\r\n\t\tsetBoxHasClosed(false)\r\n\t\tsetOverflowOpenClass('overflow-barrier-opening')\r\n\t}\r\n\r\n\tfunction onBoxClosed() {\r\n\t\tsetBoxHasClosed(true)\r\n\t}*/\r\n\r\n\t// ======================================= Helper Fns ================================== //\r\n\tfunction fixContainerWidth(id) { \r\n\t\tconst element = document.getElementById(id);\r\n\t\tconst elementWidth = getComputedWidth(element); \r\n\r\n\t\telement.style.width = elementWidth; \r\n\t\telement.style['max-width'] = elementWidth;\r\n\t}\r\n\r\n\tfunction removeInlineWidth(id) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\telement.style.width = '';\r\n\t\telement.style['max-width'] = '';\r\n\t}\r\n\r\n\tfunction getComputedWidth(element) {\r\n\t\tconst style = window.getComputedStyle(element);\r\n\t\treturn style.width;\r\n\t} \r\n\r\n\t// ======================================= Update ======================================= //\r\n\tuseEffect(() => {\r\n\t\tconsole.log(selectedStyle)\r\n\t\tif(selectedStyle) setStyle(selectedStyle)\r\n\t\tif(!selectedStyle) setStyle(defaultStyle)\r\n\t}, [selectedStyle])\r\n\r\n\tuseEffect(() => { \r\n\t\tsetTitle(titles[levelNum]) \r\n\t}, [levelNum])\r\n \r\n\r\n\t// ======================================= Trigger Events =============================== //\r\n\t/*useEffect(() => { \r\n\t\tif(boxStatus === 'box-closing') onBoxClosing()\r\n\t\tif(boxStatus === 'box-opening') onBoxOpening()\r\n\t\tif(boxStatus === 'box-closed') onBoxClosed()\r\n\t\tif(boxStatus === 'box-open') onBoxOpen()\r\n\t}, [boxStatus])*/\r\n\r\n\t// ======================================= Output ======================================= //\r\n\treturn ( \r\n\t\t<OpenCloseBox title={title} i={i} buttons={buttons} handleToggleClick={handleToggleClick} handleOverflowHidden={onOverflowHidden}>\r\n\t\t\t<BurgerMenu isOpen={burgerIsOpen} setIsOpen={setBurgerIsOpen} options={titles} handleClick={handleBurgerClick}/>\r\n\t\t\t\r\n\t\t\t<div className={`text-body ${textBodyOpenClass}`} id={textBodyId}>\r\n\t\t\t \t<Text levelNum={levelNum} setSelectedStyle={setSelectedStyle}/> \r\n\t\t\t</div> \r\n\t\t</OpenCloseBox> \r\n\t)\r\n}\r\n\r\n{/* \r\n<OpenCloseBox title={title} i={i} buttons={buttons}>\r\n<div className={`overflow-barrier ${overflowOpenClass}`}> \t</div> \r\n\t\t<div className=\"text-container\" id={textContainerId}>\r\n\t\t\t<BurgerMenu isOpen={burgerIsOpen} setIsOpen={setBurgerIsOpen} options={titles} handleClick={handleBurgerClick}/>\r\n\t\t\t<div className={\"text-body\"} id={textBodyId}>\r\n\t\t\t\t<Text setSelectedStyle={setSelectedStyle}/>\r\n\t\t\t</div>\r\n\t\t</div> \r\n</OpenCloseBox>\r\n\r\n*/}","import React from 'react';\r\nimport './Button.css';\r\n\r\nexport default function Button({children}) {\r\n\treturn (\r\n\t\t<div className=\"box-button\">\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport Button from './../Button.jsx';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport './RefreshButton.css';\r\n\r\nexport default function RefreshButton({onClick, i}) {\r\n\t// ====================== Ids ====================== //\r\n\tconst refreshButtonId = `refresh-button-${i}`;\r\n\tconst refreshIconId = `refresh-icons-${i}`;\r\n\r\n\t// ====================== State ====================== //\r\n\tconst [rotateNum, setRotateNum] = useState(0);  \r\n\tconst iconStyle = {\r\n\t\t'transform': `rotate(${rotateNum}deg)`,\r\n\t\t'transition': 'transform 1000ms',\r\n\t} \r\n\r\n\t// ====================== Status ====================== //\r\n\tconst [cursorIsOver, setCursorIsOver] = useState(false);\r\n\tconst [cursorIsDown, setCursorIsDown] = useState(false);\r\n\tconst [isAnimating, setIsAnimating] = useState(false); \r\n\r\n\t// ====================== Class ====================== //\r\n\tconst [refreshColorClass, setRefreshColorClass] = useState('refresh-button'); \r\n\r\n\t// ====================== Event Handlers ====================== //\r\n\tfunction handleMouseOver() {  \r\n\t\tsetCursorIsOver(true)\r\n\t}\r\n\r\n\tfunction handleMouseOut(e) {\r\n\t\tsetCursorIsOver(false)\r\n\t\tsetCursorIsDown(false)\r\n\t}\r\n\r\n\tfunction handleMouseDown() {\r\n\t\tonClick()\r\n\t\tsetCursorIsDown(true)\r\n\t\tsetIsAnimating(true)\r\n\t\tsetRotateNum(oldVal => oldVal + 360)\r\n\t}\r\n\r\n\tfunction handleMouseUp() {\r\n\t\tsetCursorIsDown(false)\r\n\t} \r\n\r\n\t// ====================== Event Listeners Fns ====================== //\r\n\tfunction handleTransitionEnd(e) {\r\n\t\tif(e.propertyName === 'transform') {\r\n\t\t\tsetIsAnimating(false)\r\n\t\t}\r\n\t}\r\n\r\n\t// ====================== Listen for Animation End ====================== //\r\n\tuseEffect(() => {\r\n\t\tif(cursorIsDown) {\r\n\t\t\tconst cursorElement = document.getElementById(refreshIconId);\r\n\t\t\tcursorElement.addEventListener('transitionend', handleTransitionEnd)\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tconst cursorElement = document.getElementById(refreshIconId);\r\n\t\t\tcursorElement.removeEventListener('transitionend', handleTransitionEnd)\r\n\t\t}\r\n\t}, [isAnimating])\r\n\r\n\t// ====================== Set Color Class ====================== //\r\n\tuseEffect(() => {  \r\n\t\tlet newClass;\r\n\r\n\t\tif(cursorIsOver) {\r\n\t\t\tif(cursorIsDown) newClass = 'refresh-button-down';\r\n\t\t\telse newClass = 'refresh-button-over';\r\n\t\t}\r\n\r\n\t\tif(!cursorIsOver) {\r\n\t\t\tif(isAnimating) newClass = 'refresh-button-down';\r\n\t\t\telse newClass = 'refresh-button-out';\r\n\t\t} \r\n\r\n\t\tsetRefreshColorClass(newClass);\r\n\t}, [cursorIsDown, cursorIsOver, isAnimating]) \r\n\r\n\t// ====================== Console logs ====================== //\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('cursorIsOver', cursorIsOver)\r\n\t// }, [cursorIsOver])\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('cursorIsDown', cursorIsDown)\r\n\t// }, [cursorIsDown])\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('isAnimating', isAnimating)\r\n\t// }, [isAnimating])\r\n\r\n\t// ====================== Output ====================== //\r\n\treturn ( \r\n\t\t<Button>\r\n\t\t\t<div className={`refresh-button ${refreshColorClass}`}\r\n\t\t\t\tid={refreshButtonId}\r\n\t\t\t\tonMouseOver={handleMouseOver}\r\n\t\t\t\tonMouseOut={handleMouseOut}\r\n\t\t\t\tonMouseDown={handleMouseDown}\r\n\t\t\t\tonMouseUp={handleMouseUp}\r\n\t\t\t\t>\r\n\t\t\t\t<RefreshIcon \r\n\t\t\t\t\tclassName=\"refresh-icon\" \r\n\t\t\t\t\tid={refreshIconId}\r\n\t\t\t\t\tstyle={iconStyle} \r\n\t\t\t\t\tfontSize=\"inherit\" \r\n\t\t\t\t/>\r\n\t\t\t</div> \r\n\t\t</Button>\r\n\t)\r\n}\r\n ","import React, {useState, useEffect} from 'react'; \r\nimport OpenCloseBox from './OpenCloseBox/OpenCloseBox.jsx';\r\nimport RefreshButton from './Buttons/RefreshButton/RefreshButton.jsx';\r\nimport './CodeInput.css';\r\n\r\nexport default function CodeInput({title, i, code, setCode, originalCode}) {\r\n\t/*\r\n\t\t* show title\r\n\r\n\t\t* show code\r\n\r\n\t\t* update code on user input\r\n\t\r\n\t\t* reset to original code on refresh press\r\n\r\n\t\t* open and close on toggle press \r\n\r\n\t\ttidy code\r\n\t*/\r\n\t\r\n\t// ===================================== Ids ===================================== //\r\n\tconst codeDisplayId = `code-display-${i}`;\r\n\t\r\n\t// ===================================== Status ===================================== //\r\n\tconst [boxStatus, setBoxStatus] = useState('');\r\n\tconst [contentContainerStatus, setContentContainerStatus] = useState('');\r\n\tconst [isOverflowing, setIsOverflowing] = useState(false);\r\n\tconst [refreshClicked, setRefreshClicked] = useState(false);\r\n\tconst [colorHasTransitioned, setColorHasTransitioned] = useState(false);\r\n\r\n\t// ===================================== Classes ===================================== //\r\n\tconst [fadeClass, setFadeClass] = useState('code-display-no-fade');\r\n\tconst [openClass, setOpenClass] = useState('code-display-open');\r\n\t\r\n\t// ===================================== Buttons ===================================== //\r\n\tconst buttons = [<RefreshButton onClick={handleRefreshClick}/>];\r\n\r\n\t// ===================================== Event Handlers ===================================== //\r\n\tfunction handleRefreshClick() {\r\n\t\t// if(code !== originalCode) {\r\n\t\t// \tsetRefreshClicked(true)\r\n\t\t// \tsetColorHasTransitioned(false)\r\n\t\t// \tsetFadeClass('code-display-fade')\r\n\t\t// } \r\n\t}\r\n\r\n\tfunction onTextFaded() {\r\n\t\t// setRefreshClicked(false)\r\n\t\t// setCode(originalCode)\r\n\t\t// setFadeClass('code-display-no-fade')\r\n\t}\r\n\r\n\tfunction onTextChange(e) {   \r\n\t\tconst isOverflowing = e.target.scrollHeight > e.target.clientHeight; \r\n\t\tsetIsOverflowing(isOverflowing)\r\n\r\n\t\tsetCode(e.target.value)\r\n\t}\r\n\r\n\t// function handleTransitionEnd(e) {\r\n\t// \tif(e.propertyName === 'color') setColorHasTransitioned(true)\r\n\t// } \r\n\r\n\t// ===================================== Helper Fns ===================================== //\r\n\tfunction setInnerText(id, value) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\telement.innerText = value;\r\n\t}\r\n\t// ===================================== Update Classes ===================================== //\r\n\t// update openClass\r\n\t// useEffect(() => {\r\n\t// \tlet newClass = '';\r\n\r\n\t// \tif(boxStatus === 'box-open') {\r\n\t// \t\tif(contentContainerStatus !== 'content-container-open') {\r\n\t// \t\t\tnewClass = isOverflowing ? 'code-display-opening-overflow' : 'code-display-opening';\r\n\t// \t\t} else if (contentContainerStatus === 'content-container-open') {\r\n\t// \t\t\tnewClass = 'code-display-open';\r\n\t// \t\t}\r\n\t// \t} else {\r\n\t// \t\tnewClass = 'code-display-closed';\r\n\t// \t}\r\n\r\n\t// \tsetOpenClass(newClass)\r\n\t// }, [boxStatus, contentContainerStatus])\r\n\r\n\t// ===================================== Add Event Listeners ===================================== \r\n\t// listen for transition end\r\n\t// useEffect(() => {\r\n\t// \tconst codeDisplayElement = document.getElementById(codeDisplayId);\r\n\r\n\t// \tif(refreshClicked) codeDisplayElement.addEventListener('transitionend', handleTransitionEnd)\r\n\t// \treturn () => { codeDisplayElement.removeEventListener ('transitionend', handleTransitionEnd)}\r\n\t// }, [refreshClicked])\r\n\r\n\t// ===================================== Listen for transition end ===================================== //\r\n\t// handle color transition end\r\n\t// useEffect(() => { \r\n\t// \tif(refreshClicked && colorHasTransitioned) {\r\n\t// \t\tonTextFaded()\r\n\t// \t} \r\n\t// }, [refreshClicked, colorHasTransitioned])\r\n\r\n\tfunction onCodeChange(e) {\r\n\t\tconsole.log(e)\r\n\t}\r\n\t// set initial value\r\n\tuseEffect(() => {\r\n\t\tsetInnerText(codeDisplayId, code)\r\n\t}, [])\r\n\r\n\t// ===================================== Output ===================================== //\r\n\treturn (\r\n\t\t<OpenCloseBox title={title} i={i} buttons={buttons}>\r\n\t\t\t<code className={`code-display ${openClass} ${fadeClass}`} id={codeDisplayId} contenteditable=\"true\" onKeyDown={onCodeChange} innerText=\"hello world\">  \r\n\t\t\t</code>\r\n\t\t</OpenCloseBox>\r\n\t)\r\n}\r\n\r\n{/* \r\n\r\n\t<div className=\"code-display-container\">\r\n\t\t\t\t<textarea className={`code-display ${openClass} ${fadeClass}`} id={codeDisplayId} value={code} onChange={onTextChange}> \r\n\t\t\t\t</textarea>\r\n\t\t\t</div>\r\n\r\n*/}","import React, {useState, useEffect} from 'react';\r\nimport Button from './../Button.jsx';\r\nimport GridOnIcon from '@material-ui/icons/GridOn';\r\nimport './GridButton.css';\r\n\r\nexport default function GridButton({handleClick, gridStatus, setGridStatus, setShowGrid}) {\r\n\t// ====================  Status ========================= //\r\n\tconst [isOver, setIsOver] = useState(false);\r\n\tconst [isDown, setIsDown] = useState(false);\r\n\tconst [isSelected, setIsSelected] = useState(false); \r\n\tconst [gridStatusClass, setGridStatusClass] = useState('');\r\n\r\n\t// ====================  Event Handlers ========================= //\r\n\tfunction handleMouseOver() {\r\n\t\tsetIsOver(true)\r\n\t}\r\n\r\n\tfunction handleMouseOut() {\r\n\t\tsetIsOver(false)\r\n\t\tsetIsDown(false)\r\n\t}\r\n\r\n\tfunction handleMouseDown() {\r\n\t\tsetIsDown(true)\r\n\t\tsetIsSelected(oldVal => !oldVal)\r\n\t}\r\n\r\n\tfunction handleMouseUp() {\r\n\t\tsetIsDown(false)\r\n\t}\r\n\r\n\t// ====================  Update Status ========================= //\r\n\tuseEffect(() => {\r\n\t\tif(isOver) {\r\n\t\t\tif(isDown) setGridStatus('grid-down')\r\n\t\t\telse setGridStatus('grid-over')\r\n\t\t}\r\n\r\n\t\tif(!isOver) {\r\n\t\t\tif(isSelected) setGridStatus('grid-selected')\r\n\t\t\telse setGridStatus('grid-out')\r\n\t\t}\r\n\r\n\t}, [isOver, isDown, isSelected])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tsetShowGrid(isSelected)\r\n\t}, [isSelected])\r\n\r\n\t// ====================  Update Class ========================= //\r\n\tuseEffect(() => {\r\n\t\tlet newClass;\r\n\r\n\t\tif(gridStatus === 'grid-over') newClass = 'grid-button-over';\r\n\t\tif(gridStatus === 'grid-out') newClass = 'grid-button-out';\r\n\t\tif(gridStatus === 'grid-down') newClass = 'grid-button-down';\r\n\t\tif(gridStatus === 'grid-selected') newClass = 'grid-button-selected';\r\n\r\n\t\tsetGridStatusClass(newClass)\r\n\t}, [gridStatus])\r\n\r\n\t// ====================  Console.logs ========================= //\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('gridStatus', gridStatus)\r\n\t// }, [gridStatus])\r\n\r\n\t// ====================  Output ========================= //\r\n\treturn ( \r\n\t\t<Button>\r\n\t\t\t<div onMouseOver={handleMouseOver}\r\n\t\t\t\t\tonMouseOut={handleMouseOut}\r\n\t\t\t\t\tonMouseDown={handleMouseDown} \r\n\t\t\t\t\tonMouseUp={handleMouseUp}\r\n\t\t\t\t\tclassName={`grid-button ${gridStatusClass}`}>\r\n\t\t\t\t<GridOnIcon className=\"grid-icon\" fontSize=\"inherit\"/>\r\n\t\t\t</div>\r\n\t\t</Button>\r\n\t)\r\n}\r\n/*\r\n<Button>\r\n\t\t\t<div onMouseOver={handleMouseOver}\r\n\t\t\t\tonMouseOut={handleMouseOut}\r\n\t\t\t\tonMouseDown={handleMouseDown} \r\n\t\t\t\tonMouseUp={handleMouseUp}\r\n\t\t\t\tclassName={`grid-button ${gridStatusClass}`}>\r\n\t\t\t\t<GridOnIcon className=\"grid-icon\" fontSize=\"inherit\"/>\r\n\t\t\t</div>\r\n\t\t</Button>\r\n*/","import React, {useState, useEffect} from 'react'; \r\nimport './GridOverlayStyle.css';\r\n\r\nexport default function GridOverlay({gridStatus, showGrid}) {   \r\n\tconst numLines = 10;\r\n\tconst showOnHover = true;\r\n\tconst showOnOffHover = false;\r\n\tconst [gridColorClass, setGridColorClass] = useState(''); \r\n\r\n\tuseEffect(() => { \r\n\t\tif(showOnOffHover || !showOnOffHover && showGrid) {\r\n\t\t\tif(gridStatus === 'grid-over') setGridColorClass('grid-line-over')\r\n\t\t\tif(gridStatus === 'grid-down') setGridColorClass('grid-line-down') \r\n\t\t\tif(gridStatus === 'grid-selected') setGridColorClass('grid-line-selected') \r\n\t\t\tif(gridStatus === 'grid-out') setGridColorClass('grid-line-out') \r\n\t\t}\r\n\r\n\t\tif(!showOnOffHover && !showGrid) {\r\n\t\t\tsetGridColorClass('grid-line-out') \r\n\t\t}\r\n\t}, [gridStatus, showGrid])  \r\n\r\n\treturn (\r\n\t\t<div className=\"grid-overlay\">\r\n\t\t\t{\r\n\t\t\t\t[...Array(numLines - 1).keys()].map(() => {\r\n\t\t\t\t\treturn <div className={`grid-line grid-line-horiz ${gridColorClass}`}></div>\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\t[...Array(numLines - 1).keys()].map((i) => {\r\n\t\t\t\t\tconst leftValue = i * (100 / numLines) + '%';\r\n\t\t\t\t\treturn <div className={`grid-line grid-line-vert ${gridColorClass}`} style={{left: leftValue}}></div>\t\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react'; \r\nimport OpenCloseBox from './OpenCloseBox/OpenCloseBox.jsx';\r\nimport RefreshButton from './Buttons/RefreshButton/RefreshButton.jsx';\r\nimport GridButton from './Buttons/GridButton/GridButton.jsx';\r\nimport GridOverlay from './Buttons/GridButton/GridOverlay.jsx';\r\nimport {\r\n\tonTransition, \r\n\telementWidthIsOverflowing, \r\n\telementHeightIsOverflowing, \r\n\telementHasInlineSize,\r\n\tremoveInlineSize,\r\n\tsetToElementSize,\r\n} from './../utils.js';\r\nimport './OutputDisplay.css';\r\n\r\nexport default function OutputDisplay({title, htmlString, cssString, i}) {\r\n\t/*\r\n\t\t* Resizable display box with border\r\n\t\t\r\n\t\t* display box closes / opens when box opens and closes\r\n\r\n\t\t* display box not resizable when box is opening / closing\r\n\t\t\r\n\t\t* Displays output of html and css string\r\n\t\r\n\t\t* Updates when html or css string changed\r\n\t\t\r\n\t\t* handle grid button press\r\n\t\t\r\n\t\t* handle refresh button press  \r\n\t*/\r\n\r\n\t// ================ State ========================= //\r\n\t// ====== Ids //\r\n\tconst outputDisplayId = `output-display-${i}`;\r\n\tconst boxBodyId =  `box-body-${i}`;\r\n\tconst contentContainerId = `content-container-${i}`;\r\n\r\n\t// ====== Box Status //\r\n\tconst [savedHeight, setSavedHeight] = useState(null);\r\n\tconst [savedWidth, setSavedWidth] = useState(null);\r\n\tconst [isOverflowing, setIsOverflowing] = useState(false);\r\n\r\n\t// ====== Grid //\r\n\tconst [gridStatus, setGridStatus] = useState('');\r\n\tconst [showGrid, setShowGrid] = useState(false); \r\n\r\n\t// ====== Source //\r\n\tconst [source, setSource] = useState(null);\r\n\r\n\t// ====== Refresh //\r\n\tconst [isResizing, setIsResizing] = useState(false);\r\n\tconst [numTransitionStarts, setNumTransitionStarts] = useState(0);\r\n\tconst [numTransitionEnds, setNumTransitionEnds] = useState(0); \r\n\r\n\t// ================ Class========================= //\r\n\tconst [outputDisplayClass, setOutputDisplayClass] = useState('output-display-open');\r\n\r\n\t// ================ Buttons ===================== //\r\n\tconst buttons = [\r\n\t\t<RefreshButton onClick={onRefreshClick} i={i}/>,\r\n\t\t<GridButton \r\n\t\t\thandleClick={onGridClick} \r\n\t\t\tgridStatus={gridStatus} \r\n\t\t\tsetGridStatus={setGridStatus}\r\n\t\t\tshowGrid={showGrid}\r\n\t\t\tsetShowGrid={setShowGrid}/>\r\n\t];\t \r\n\r\n\t// ================ Click Handlers ===================== //\r\n\tfunction onGridClick() {\r\n\t\tsetShowGrid(oldVal => !oldVal)\r\n\t} \r\n\r\n\tfunction onRefreshClick() {  \r\n\t\tif(elementHasInlineSize(outputDisplayId)) { \r\n\t\t\tsetOutputDisplayClass('output-display-resizing') \r\n\t\t\tsetIsResizing(true)\r\n\t\t}\r\n\t}\r\n\r\n\t// ================ Event Handlers ===================== //\r\n\tfunction onRefreshStart() { \r\n\t\taddRefreshListeners()\r\n\t\tsetToElementSize(outputDisplayId, boxBodyId)\r\n\t}\r\n\r\n\tfunction onRefreshEnd() {  \r\n\t\tsetOutputDisplayClass('output-display-open')\r\n\t\tsetNumTransitionStarts(0)\r\n\t\tsetNumTransitionEnds(0) \r\n\t\tsetIsResizing(false) \r\n\t}\r\n\r\n\tfunction onRefreshTransitionStart() {\r\n\t\tsetNumTransitionStarts(oldVal => oldVal + 1)\r\n\t}\r\n\r\n\tfunction onRefreshTransitionEnd() {\r\n\t\tsetNumTransitionEnds(oldVal => oldVal + 1)\r\n\t}\r\n\r\n\tfunction onClickToggle(boxIsOpen, widthIsOverflowing, heightIsOverflowing) {\r\n\t\tif(boxIsOpen) onClickBoxOpen(widthIsOverflowing, heightIsOverflowing)\r\n\t\tif(!boxIsOpen) onClickBoxClosed()\r\n\t}\r\n\r\n\tfunction onClickBoxClosed(widthIsOverflowing, heightIsOverflowing) {\r\n\t\tconst thisIsOverflowing = updateIsOverflowing(widthIsOverflowing, heightIsOverflowing)\r\n\r\n\t\tif(thisIsOverflowing) {\r\n\t\t\t// set content container size in pixels to allow animated overflow shrink\r\n\t\t\tsetToElementSize(contentContainerId, outputDisplayId)\r\n\t\t}   \r\n\r\n\t\t// use !important style to over-ride inline width and height\r\n\t\tsetOutputDisplayClass('output-display-closing')\r\n\t}\r\n\r\n\tfunction onClickBoxOpen() {\r\n\t\tsetOutputDisplayClass('output-display-opening')\r\n\r\n\t\tif(isOverflowing) setToSavedSize(outputDisplayId)\r\n\t\taddOutputDisplayListeners()\r\n\t}\r\n\r\n\tfunction onBoxOpen() {\r\n\t\tsetOutputDisplayClass('output-display-open')\r\n\t} \r\n\r\n\tfunction onCodeChange() {\r\n\t\tsetSource(`\r\n  \t\t<html lang=\"en\">\r\n  \t\t<head>\r\n  \t\t\t<style>\r\n  \t\t\t\tbody { padding: 0; margin: 0; overflow: hidden; cursor: default; }\r\n  \t\t\t\t${cssString}\r\n  \t\t\t</style>\r\n  \t\t</head>\r\n  \t\t<body>${htmlString}</body>\r\n  \t\t</html>`);\r\n\t}\r\n\r\n\t// ================ Helper Fns ===================== //\r\n\tfunction updateIsOverflowing(widthIsOverflowing, heightIsOverflowing) {\r\n\t\tconst thisIsOverflowing = widthIsOverflowing || heightIsOverflowing;\r\n\t\tsetIsOverflowing(thisIsOverflowing)\r\n\t\treturn thisIsOverflowing;\r\n\t} \r\n\r\n\tfunction setToSavedSize(id) {\r\n\t\tconst element = document.getElementById(id)\r\n\t\t\r\n\t\tif(savedWidth) element.style.width = savedWidth;\r\n\t\tif(savedHeight) element.style.height = savedHeight;\r\n\r\n\t\tresetSavedSize()\r\n\t}\r\n\r\n\tfunction resetSavedSize() {\r\n\t\tsetSavedWidth(null)\r\n\t\tsetSavedHeight(null)\r\n\t}\r\n \r\n\tfunction addRefreshListeners() {\r\n\t\tconst transitionStart = () => onRefreshTransitionStart();\r\n\t\tconst transitionEnd = () => onRefreshTransitionEnd();\r\n\r\n\t\tonTransition(outputDisplayId, 'width', transitionStart, transitionEnd)\r\n\t\tonTransition(outputDisplayId, 'height', transitionStart, transitionEnd)\r\n\t} \r\n\r\n\tfunction addOutputDisplayListeners() {\r\n\t\tconst transitionStart = () => { };\r\n\t\tconst transitionEnd = () => { onBoxOpen() };\r\n\r\n\t\tonTransition(contentContainerId, 'height', transitionStart, transitionEnd)\r\n\t}\r\n\r\n\t// ============== Detect Refresh Start & End =================== //\r\n\tuseEffect(() => {\r\n\t\tif(isResizing) {\r\n\t\t\tif(numTransitionStarts === 0) {\r\n\t\t\t\tonRefreshStart() \r\n\t\t\t}\r\n\r\n\t\t\tif(numTransitionStarts > 0\r\n\t\t\t&& numTransitionStarts === numTransitionEnds) {\r\n\t\t\t\tonRefreshEnd()\r\n\t\t\t}\r\n\t\t}\r\n\t}, [isResizing, numTransitionStarts, numTransitionEnds]) \r\n\r\n\t// ======== Code Input //\r\n\tuseEffect(() => {  \r\n  \tonCodeChange(htmlString, cssString)\r\n  }, [htmlString, cssString]) \r\n \r\n\t// ============== Output ============================== //\r\n\treturn ( \r\n\t\t<OpenCloseBox \r\n\t\t\ttitle={title} \r\n\t\t\ti={i}\r\n\t\t\thandleToggleClick={onClickToggle}\r\n\t\t\tboxBodyId={boxBodyId}\r\n\t\t\tcontentContainerId={contentContainerId}\r\n\t\t\tbuttons={buttons}>  \r\n\t\t\t<div className={`output-display ${outputDisplayClass}`} id={outputDisplayId}>\r\n\t\t\t\t<iframe srcDoc={source} className=\"iFrame\"/> \r\n\t\t\t\t<GridOverlay gridStatus={gridStatus} showGrid={showGrid}/>\r\n\t\t\t</div>  \r\n\t\t</OpenCloseBox>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react';\r\n/*import LearnBox from './parts/LearnBox.jsx'; */\r\n/*import OutputDisplay from './parts/OutputDisplay.jsx'; */\r\nimport LevelText from './parts/LevelText.jsx';\r\nimport CodeInput from './parts/CodeInput.jsx';\r\nimport OutputDisplay from './parts/OutputDisplay.jsx';\r\n\r\n// import OpenCloseBox from './parts/OpenCloseBox/OpenCloseBox.jsx';\r\n// import CodeBox from './CodeBox.jsx';  \r\n\r\n// import DisplayBox from './DisplayBox.jsx';\r\nimport './LearnStyle.css'; \r\n\r\nimport {html as html_1} from './data/learn/Level_1/html.jsx';\r\nimport {html as html_2} from './data/learn/Level_2/html.jsx';\r\nimport {html_3} from './data/html/html_3.jsx';\r\nimport {html_4} from './data/html/html_4.jsx';\r\nimport {html_5} from './data/html/html_5.jsx';\r\nimport {html_6} from './data/html/html_6.jsx';\r\nimport {html_7} from './data/html/html_7.jsx';\r\nimport {html_8} from './data/html/html_8.jsx';\r\nimport {html_9} from './data/html/html_9.jsx';\r\nimport {html_10} from './data/html/html_10.jsx';\r\nimport {html_11} from './data/html/html_11.jsx';\r\nimport {html_12} from './data/html/html_12.jsx';\r\nimport {html_13} from './data/html/html_13.jsx';\r\n\r\nimport {style as style_1} from './data/learn/Level_1/style.jsx';\r\nimport {style as style_2} from './data/learn/Level_2/style.jsx';\r\nimport {style_3} from './data/css/style_3.jsx';\r\nimport {style_4} from './data/css/style_4.jsx';\r\nimport {style_5} from './data/css/style_5.jsx';\r\nimport {style_6} from './data/css/style_6.jsx';\r\nimport {style_7} from './data/css/style_7.jsx';\r\nimport {style_8} from './data/css/style_8.jsx';\r\nimport {style_9} from './data/css/style_9.jsx';\r\nimport {style_10} from './data/css/style_10.jsx';\r\nimport {style_11} from './data/css/style_11.jsx';\r\nimport {style_12} from './data/css/style_12.jsx';\r\nimport {style_13} from './data/css/style_13.jsx';\r\n\r\nexport default function Learn() {  \r\n\tconst [levelNum, setLevelNum] = useState(0);\r\n\r\n\tconst htmlStrings = [\r\n\t\thtml_1,\r\n\t\thtml_2,\r\n\t\thtml_3,\r\n\t\thtml_4,\r\n\t\thtml_5,\r\n\t\thtml_6,\r\n\t\thtml_7,\r\n\t\thtml_8,\r\n\t\thtml_9,\r\n\t\thtml_10,\r\n\t\thtml_11,\r\n\t\thtml_12,\r\n\t\thtml_13,\r\n\t];\r\n\r\n\tconst cssStrings = [\r\n\t\tstyle_1,\r\n\t\tstyle_2,\r\n\t\tstyle_3,\r\n\t\tstyle_4,\r\n\t\tstyle_5,\r\n\t\tstyle_6,\r\n\t\tstyle_7,\r\n\t\tstyle_8,\r\n\t\tstyle_9,\r\n\t\tstyle_10,\r\n\t\tstyle_11,\r\n\t\tstyle_12,\r\n\t\tstyle_13,\r\n\t];\r\n\r\n\tconst menuOptions = [\r\n\t\t'Level 1: display: flex',\r\n\t\t'Level 2: justify-content',\r\n\t\t'Level 3: flex-direction',\r\n\t\t'Level 4: flex-wrap',\r\n\t\t'Level 5: flex-flow',\r\n\t\t'Level 6: align-items',\r\n\t\t'Level 7: align-content',\r\n\t\t'Level 8: order',\r\n\t\t'Level 9: flex-grow',\r\n\t\t'Level 10: flex-shrink',\r\n\t\t'Level 11: flex-basis',\r\n\t\t'Level 12: flex',\r\n\t\t'Level 13: align-self',\r\n\t]; \r\n\r\n\tconst infoTitle = menuOptions[levelNum];\r\n\r\n\tconst [htmlString, setHtmlString] = useState(htmlStrings[levelNum]);\r\n\tconst [cssString, setCssString] = useState(cssStrings[levelNum]); \r\n\tconst [defaultCssString, setDefaultCssString] = useState(cssStrings[levelNum]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetHtmlString(htmlStrings[levelNum])\r\n\t\tsetCssString(cssStrings[levelNum])\r\n\t\tsetDefaultCssString(cssStrings[levelNum])\r\n\r\n\t}, [levelNum])\r\n\r\n\treturn (\r\n\t\t<section className=\"learn-container\"> \r\n\t\t\t<LevelText i=\"1\" titles={menuOptions} setStyle={setCssString} defaultStyle={defaultCssString} levelNum={levelNum} setLevelNum={setLevelNum}/>\r\n\t\t\t<CodeInput i=\"2\" title=\"index.html\" code={htmlString} setCode={setHtmlString} originalCode={htmlStrings[levelNum]}></CodeInput>\r\n\t\t\t<CodeInput i=\"3\" title=\"style.css\" code={cssString} setCode={setCssString} originalCode={cssStrings[levelNum]}></CodeInput>\r\n\t\t\t<OutputDisplay i=\"4\" title=\"display\" htmlString={htmlString} cssString={cssString} />\r\n\t\t</section>\r\n\t)\r\n}","export const html = \r\n`<div class=\"item_1\">Item 1</div>\r\n<div class=\"item_2\">Item 2</div>`;","export const html = \r\n`<div class=\"container\">\r\n  <div class=\"item item_1\">1</div>\r\n  <div class=\"item item_2\">2</div>\r\n  <div class=\"item item_3\">3</div>\r\n  <div class=\"item item_4\">4</div> \r\n</div>`;","export const html_3 = \r\n`<div class=\"container\">\r\n  <div class=\"item\">1</div>\r\n  <div class=\"item\">2</div>\r\n  <div class=\"item\">3</div>\r\n  <div class=\"item\">4</div>\r\n</div>`;","export const html_4 = \r\n`<div class=\"container\">\r\n  <div class=\"item\">1</div>\r\n  <div class=\"item\">2</div>\r\n  <div class=\"item\">3</div>\r\n  <div class=\"item\">4</div>\r\n  <div class=\"item\">5</div>\r\n  <div class=\"item\">6</div>\r\n  <div class=\"item\">7</div>\r\n  <div class=\"item\">8</div>\r\n  <div class=\"item\">9</div>\r\n  <div class=\"item\">10</div>\r\n</div>`;","export const html_5 = \r\n`<div class=\"container\">\r\n  <div class=\"item\">1</div>\r\n  <div class=\"item\">2</div>\r\n  <div class=\"item\">3</div>\r\n  <div class=\"item\">4</div>\r\n  <div class=\"item\">5</div>\r\n  <div class=\"item\">6</div>\r\n  <div class=\"item\">7</div>\r\n  <div class=\"item\">8</div>\r\n  <div class=\"item\">9</div>\r\n  <div class=\"item\">10</div>\r\n</div>`;","export const html_6 = \r\n`<div class=\"container\">\r\n  <div class=\"item item_1\">Item One</div>\r\n  <div class=\"item item_2\">Item Two</div>\r\n  <div class=\"item item_3\">Item Three</div>\r\n  <div class=\"item item_4\">Item Four</div>\r\n</div>`;","export const html_7 = \r\n`<div class=\"container\">\r\n  <div class=\"item item_1\">1</div>\r\n  <div class=\"item\">2</div>\r\n  <div class=\"item\">3</div>\r\n  <div class=\"item\">4</div>\r\n  <div class=\"item\">5</div>\r\n  <div class=\"item\">6</div>\r\n  <div class=\"item\">7</div>\r\n  <div class=\"item\">8</div>\r\n  <div class=\"item\">9</div>\r\n  <div class=\"item\">10</div>\r\n</div>`;","export const html_8 = \r\n`<div class=\"container\">\r\n  <div class=\"item item_1\">1</div>\r\n  <div class=\"item item_2\">2</div>\r\n  <div class=\"item item_3\">3</div>\r\n  <div class=\"item item_4\">4</div>\r\n  <div class=\"item item_5\">5</div>\r\n</div>`;","export const html_9 = \r\n`<div class=\"container\">\r\n  <div class=\"item item_1\">1</div>\r\n  <div class=\"item item_2\">2</div>\r\n  <div class=\"item item_3\">3</div>\r\n  <div class=\"item item_4\">4</div> \r\n</div>\r\n<div class=\"reference-grid\">\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n</div>`;","export const html_10 = \r\n`<div class=\"container\">\r\n  <div class=\"item item_1\">1</div>\r\n  <div class=\"item item_2\">2</div>\r\n</div>\r\n<div class=\"reference-grid\">\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n</div>`;","export const html_11 = \r\n`<div class=\"container\">\r\n  <div class=\"item item_1\">1</div>\r\n  <div class=\"item item_2\">2</div>\r\n  <div class=\"item item_3\">3</div> \r\n  <div class=\"item item_4\">4</div>\r\n</div>\r\n<div class=\"reference-grid\">\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n</div>`;","export const html_12 = \r\n`<div class=\"container\">\r\n  <div class=\"item item_1\">1</div>\r\n  <div class=\"item item_2\">2</div>\r\n  <div class=\"item item_3\">3</div> \r\n  <div class=\"item item_4\">4</div>\r\n</div>\r\n<div class=\"reference-grid\">\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n  <div class=\"grid-item\"></div>\r\n</div>`;","export const html_13 = \r\n`<div class=\"container\">\r\n  <div class=\"item item_1\">1</div>\r\n  <div class=\"item item_2\">2</div>\r\n  <div class=\"item item_3\">3</div> \r\n  <div class=\"item item_4\">4</div>\r\n</div>`;","export const style = \r\n`.item_1 { \r\n  display: flex; \r\n  justify-content: center;  \r\n  background: red;  \r\n} \r\n\r\n.item_2 {  \t\r\n  \t\r\n\tjustify-content: center;  \r\n\tbackground: blue; \r\n}`;","export const style = \r\n`.container {\r\n  display: flex;  \r\n\r\n}\r\n\r\n.item { \r\n  min-width: 2.5em;\r\n  min-height: 2.5em;\r\n}\r\n\r\n.item_1 {\r\n  background: blue;\r\n}\r\n\r\n.item_2 {\r\n  background: red;\r\n}\r\n\r\n.item_3 {\r\n  background: yellow;\r\n}\r\n\r\n.item_4 {\r\n  background: green;\r\n}`;","export const style_3 = \r\n`.container {\r\n  display: flex;\r\n  \r\n  height: 100vh;\r\n  width: 100vw;\r\n}\r\n\r\n.item { \r\n  border: 2px solid black;\r\n  width: 2.5em;\r\n  height: 2.5em;\r\n}`;","export const style_4 = \r\n`.container {\r\n  display: flex; \r\n  \r\n}\r\n\r\n.item { \r\n  border: 2px solid black;\r\n  min-width: 2.5em;\r\n  height: 2.5em;\r\n}`;","export const style_5 = \r\n`.container {\r\n  display: flex; \r\n\r\n}\r\n\r\n.item { \r\n  border: 2px solid black;\r\n  min-width: 2.5em;\r\n  height: 2.5em;\r\n}`;","export const style_6 = \r\n`.container {\r\n  \r\n \r\n  width: 100vw;\r\n  height: 20em;\r\n  background: grey;\r\n}\r\n\r\n.item { \r\n  border: 2px solid black;\r\n}`;","export const style_7 = \r\n`.container {\r\n  display: flex;  \r\n  flex-wrap: wrap;\r\n\r\n  width: 100vw;\r\n  height: 20em;\r\n  background: grey;\r\n}\r\n\r\n.item { \r\n  border: 2px solid black;\r\n  width: 2em;\r\n  height: 2em;\r\n}`;","export const style_8 = \r\n`.container {\r\n  display: flex;  \r\n  width: 100vw;\r\n  height: 100vh;\r\n}\r\n\r\n.item { \r\n  border: 2px solid black; \r\n  width: 2em;\r\n}\r\n\r\n.item_1 {\r\n  order: 5;\r\n}\r\n\r\n.item_2 {\r\n  order: 4;\r\n}\r\n\r\n.item_3 {\r\n  order: 3;\r\n}\r\n\r\n.item_4 {\r\n  order: 2;\r\n}\r\n\r\n.item_5 {\r\n  order: 2;\r\n}`;\r\n","export const style_9 = \r\n`.container {\r\n  display: flex;  \r\n  width: 100vw;\r\n  height: 90vh;\r\n}\r\n\r\n.item_1 {\r\n  flex-grow: 5;\r\n}\r\n\r\n.item_2 {\r\n  flex-grow: 1;\r\n}\r\n\r\n.item { \r\n  border: 2px solid black; \r\n  width: 10%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.reference-grid {\r\n  display: flex;  \r\n  width: 100vw;\r\n  height: 10vh;\r\n  background: blue;\r\n}\r\n\r\n.grid-item {\r\n  height: 2em;\r\n  width: 20%;\r\n  border: 2px solid black;\r\n}`;\r\n","export const style_10 = \r\n`.container {\r\n  display: flex;  \r\n  width: 100vw;\r\n  height: 90vh;\r\n}\r\n\r\n.item_1 {\r\n  flex-shrink: 1;\r\n}\r\n\r\n.item_2 {\r\n  flex-shrink: 0;\r\n}\r\n\r\n.item { \r\n  border: 2px solid black; \r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.reference-grid {\r\n  display: flex;  \r\n  width: 100vw;\r\n  height: 10vh;\r\n  background: blue;\r\n}\r\n\r\n.grid-item {\r\n  height: 2em;\r\n  width: 20%;\r\n  border: 2px solid black;\r\n}`;\r\n","export const style_11 = \r\n`.container {\r\n  display: flex;  \r\n  width: 100vw;\r\n  height: 90vh;\r\n}\r\n\r\n.item_1 {\r\n  flex-basis: 25%;\r\n}\r\n\r\n.item_2 {\r\n  min-width: 25%;\r\n}\r\n\r\n.item_3 {\r\n  min-width: 25%;\r\n}\r\n\r\n.item_4 {\r\n  min-width: 25%;\r\n}\r\n \r\n.item { \r\n  border: 2px solid black; \r\n  box-sizing: border-box;\r\n}\r\n\r\n.reference-grid {\r\n  display: flex;  \r\n  width: 100vw;\r\n  height: 10vh;\r\n  background: blue;\r\n}\r\n\r\n.grid-item {\r\n  height: 2em;\r\n  width: 20%;\r\n  border: 2px solid black;\r\n}`;\r\n","export const style_12 = \r\n`.container {\r\n  display: flex;  \r\n  width: 100vw;\r\n  height: 90vh;\r\n}\r\n\r\n.item_1 {\r\n  flex: 1;\r\n}\r\n\r\n.item_2 {\r\n  min-width: 1 1;\r\n}\r\n\r\n.item_3 {\r\n  flex: 1 1 25%;\r\n}\r\n  \r\n.item { \r\n  border: 2px solid black; \r\n  box-sizing: border-box;\r\n}\r\n\r\n.reference-grid {\r\n  display: flex;  \r\n  width: 100vw;\r\n  height: 10vh;\r\n  background: blue;\r\n}\r\n\r\n.grid-item {\r\n  height: 2em;\r\n  width: 20%;\r\n  border: 2px solid black;\r\n}`;\r\n","export const style_13 = \r\n`.container {\r\n  display: flex;  \r\n  width: 100vw;\r\n  height: 90vh;\r\n  align-items: center;\r\n} \r\n  \r\n.item { \r\n  border: 2px solid black; \r\n  box-sizing: border-box;\r\n} `;\r\n","// add unique ids\n// display - inline-flex\n// seperate settings file\n// animate router\n// animate open and close play\n// click min window = close burger\n// add level selector on burger click \n// animate changes  \n// play -> if all deselected = change spacing so all move to left\n// learn -> type undo cut paste enables\n// Introduction - why is flex box useful => static vs flexible\n\n// Learn\n// use color boxes\n// allow users to shrink display view to show how flex works\n// click button to toggle reference grid on/off\n// check through all, show users what values are allowed for properties\n// Read\n\n// Write\n\n// Use\n\n// Support\n\n// settings\n\nimport React from 'react';\nimport Header from './components/Header.jsx';\nimport Home from './components/Home.jsx';\nimport Learn from './components/Learn.jsx';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport { CSSTransition } from \"react-transition-group\";\nimport './styles/reset.css';\nimport './styles/fonts.css'; \nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n    \t<Router>\n    \t\t<Header/>\n        \t\t<Switch>\n                    <Route path={[\"/\", \"/flex-quest/\"]} exact component={Home}/>\n        \t\t\t<Route path=\"/learn\" component={Learn}/>\n        \t\t</Switch>\n\t    </Router>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}