{"version":3,"sources":["components/Header.jsx","components/Home.jsx","components/parts/Burger/Burger.jsx","components/utils.js","components/parts/OpenCloseToggle/OpenCloseToggle.jsx","components/parts/OpenCloseBox/OpenCloseBox.jsx","components/parts/LevelText.jsx","components/parts/Buttons/Button.jsx","components/parts/Buttons/RefreshButton/RefreshButton.jsx","components/parts/CodeInput.jsx","components/parts/Buttons/GridButton/GridButton.jsx","components/parts/Buttons/GridButton/GridOverlay.jsx","components/parts/OutputDisplay.jsx","components/Learn.jsx","components/data/learn/Level_1/html.jsx","components/data/learn/Level_2/html.jsx","components/data/learn/Level_1/style.jsx","components/data/learn/Level_2/style.jsx","App.js","index.js"],"names":["Header","useState","window","location","pathname","activeLink","setActiveLink","handleLinkClick","class","to","className","onMouseDown","onClick","Home","Burger","burgerIsOpen","setBurgerIsOpen","isOver","setIsOver","isDown","setIsDown","isAnimating","setIsAnimating","burgerOpenClass","setBurgerOpenClass","burgerBarClass","setBurgerBarClass","onTransitionStart","e","propertyName","onTransitionEnd","useEffect","burgerElement","document","getElementById","addEventListener","id","onMouseOver","onMouseOut","oldVal","onMouseUp","onTransition","onStart","onEnd","element","thisStartFn","transitionStartHandler","bind","thisEndFn","transitionEndHandler","once","srcElement","setToElementSize","idOne","idTwo","elementOne","elementTwo","elementTwoStyle","getComputedStyle","style","width","height","OpenCloseToggle","toggleIsOpen","parentIsAnimating","handleClick","console","log","i","vertLineId","horizLineId","openCloseToggleId","lineIsAnimating","setLineIsAnimating","cursorLocation","setCursorLocation","cursorStatus","setCursorStatus","lineDirectionClass","setLineDirectionClass","lineColorClass","setLineColorClass","onChange","detectTransition","target","relatedTarget","OpenCloseBox","title","boxBodyId","contentContainerId","buttons","handleToggleClick","handleOverflowHidden","children","setContentContainerStatus","boxId","clickedOpen","setClickedOpen","boxIsOpen","setBoxIsOpen","setToggleIsOpen","widthOverflowOnClose","setWidthOverflowOnClose","heightOverflowOnClose","setHeightOverflowOnClose","savedHeight","setSavedHeight","widthIsOverflowing","setWidthIsOverflowing","heightIsOverflowing","setHeightIsOverflowing","overflowIsShrinking","setOverflowIsShrinking","boxWidthTransitionHasEnded","setBoxWidthTransitionHasEnded","boxOpenClass","setBoxOpenClass","contentContainerOpenClass","setContentContainerOpenClass","onPressBoxOpening","addListeners","onPressBoxClosing","thisWidthIsOverflowing","elementWidthIsOverflowing","thisHeightIsOverflowing","elementHeightIsOverflowing","clientWidth","keepWidth","widthId","offsetWidth","setWidthToFull","offsetHeight","saveHeight","keepHeight","setHeightToFull","onBoxClosing","onContentContainerOpen","property","fn","handleEnd","removeEventListener","setHeightTo","heightId","clientHeight","scrollWidth","scrollHeight","map","button","newValue","LevelText","titles","levelNum","setStyle","setLevelNum","defaultStyle","textBodyId","setTitle","selectedStyle","setTextBodyOpenClass","removeInlineWidth","elementWidth","getComputedWidth","fixContainerWidth","Button","RefreshButton","refreshButtonId","refreshIconId","rotateNum","setRotateNum","iconStyle","cursorIsOver","setCursorIsOver","cursorIsDown","setCursorIsDown","refreshColorClass","setRefreshColorClass","handleTransitionEnd","newClass","fontSize","CodeInput","code","setCode","originalCode","codeDisplayId","fadeClass","setFadeClass","openClass","onTextFadeEnd","value","sizeElementToContent","updateCode","GridButton","gridStatus","setGridStatus","setShowGrid","isSelected","setIsSelected","gridStatusClass","setGridStatusClass","GridOverlay","showGrid","gridColorClass","setGridColorClass","Array","numLines","keys","leftValue","left","OutputDisplay","htmlString","cssString","outputDisplayId","savedWidth","setSavedWidth","isOverflowing","setIsOverflowing","source","setSource","isResizing","setIsResizing","numTransitionStarts","setNumTransitionStarts","numTransitionEnds","setNumTransitionEnds","outputDisplayClass","setOutputDisplayClass","elementHasInlineSize","onRefreshStart","transitionStart","transitionEnd","addRefreshListeners","setToSavedSize","onClickBoxOpen","thisIsOverflowing","updateIsOverflowing","onClickBoxClosed","srcDoc","Learn","htmlStrings","cssStrings","menuOptions","setHtmlString","setCssString","defaultCssString","setDefaultCssString","App","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0868bf7a.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nexport default function Header() { \r\n\tconst [activeLink, setActiveLink] = useState(window.location.pathname); \r\n\t\r\n\tfunction handleLinkClick(pathname) {\r\n\t\tsetActiveLink(pathname);\r\n\t} \r\n\r\n\treturn (\r\n\t\t<header class=\"header\">\r\n\t\t\t<Link to=\"/\">\r\n\t\t  \t<h1 className={activeLink === '/' ? 'link link-selected' : 'link'}  \r\n\t\t  \t\t\tonMouseDown={() => handleLinkClick('/')}>Flex Quest</h1>\r\n\t\t  </Link>\r\n\t\t  <nav>\r\n\t\t  \t<ul class=\"header-options\">\r\n\t\t  \t\t{/*<li>Intro</li>*/}\r\n\t\t  \t\t<Link to=\"/learn\">\r\n\t\t  \t\t\t<li className={activeLink === '/learn' ? 'link link-selected' : 'link'} \r\n\t\t  \t\t\t\t\tonClick={() => handleLinkClick('/learn')}>Learn</li>\r\n\t\t  \t\t</Link>\r\n\t\t  \t\t{/*<Link to=\"/play\">\r\n\t\t  \t\t\t<li className={activeLink === '/play' ? 'link link-selected' : 'link'} \r\n\t\t  \t\t\t\t\tonClick={() => handleLinkClick('/play')}>Play</li>\r\n\t\t  \t\t</Link>*/}\r\n\t\t  \t\t{/*<li>Read</li>\r\n\t\t  \t\t<li>Write</li>\r\n\t\t  \t\t<li>Use</li>\r\n\t\t  \t\t<li>Reference</li>\r\n\t\t  \t\t<li>Support</li>*/}\r\n\t\t  \t</ul>\r\n\t\t  </nav>\r\n\t\t</header>\r\n\t)\r\n}","import './HomeStyle.css';\r\n\r\nexport default function Home() { \r\n\treturn (\r\n\t\t<div class=\"home-container\">\r\n\t\t\t<div class=\"half-box\">\r\n\t      <div> \r\n\t        <h2>Learn Flex Box</h2>\r\n\t        <p>Understand how flex box works with our tutorials.</p>\r\n\t        <p>Memorize what you have learnt with our interactive game.</p>\r\n\t      </div>\r\n\t    </div>\r\n\t    <div class=\"half-box\">\r\n\t      <div class=\"preview-box\"></div>\r\n\t    </div> \r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react';\r\nimport './BurgerStyle.css';\r\n\r\nexport default function Burger({burgerIsOpen, setBurgerIsOpen}) {\r\n\t/*\r\n\t\t* show burger icon\r\n\r\n\t\t* rotate 90deg on click\r\n\r\n\t\t* change color \r\n\t\t\t* over \r\n\t\t\t* animating \r\n\t\t\t* click   \r\n\t*/\r\n\r\n\t// ============================== State ============================= //\r\n\tconst [isOver, setIsOver] = useState(false);\r\n\tconst [isDown, setIsDown] = useState(false);\r\n\tconst [isAnimating, setIsAnimating] = useState(false);\r\n\r\n\t// ============================== Class ============================= //\r\n\tconst [burgerOpenClass, setBurgerOpenClass] = useState('burger-closed');\r\n\tconst [burgerBarClass, setBurgerBarClass] = useState('burger-bar');\r\n\t\r\n\t// ============================== Event Handlers ==================== //\r\n\tfunction handleMouseOver(e) { \r\n\t\tsetIsOver(true)\r\n\t}\r\n\r\n\tfunction handleMouseOut(e) {  \r\n\t\tsetIsOver(false)\r\n\t\tsetIsDown(false)\r\n\t}\r\n\r\n\tfunction handleMouseDown(e) { \r\n\t\tsetIsDown(true)\r\n\t\tsetBurgerIsOpen(oldVal => !oldVal)\r\n\t}\r\n\r\n\tfunction handleMouseUp(e) {  \r\n\t\tsetIsDown(false);\r\n\t} \r\n\r\n\tfunction onTransitionStart(e) { \r\n\t\tif(e.propertyName === 'transform') setIsAnimating(true)\r\n\t}\r\n\r\n\tfunction onTransitionEnd(e) {\r\n\t\tif(e.propertyName === 'transform') setIsAnimating(false)\r\n\t}\r\n\r\n\t// ============================== Detect Transition ==================== //\r\n \tuseEffect(() => {\r\n \t\tconst burgerElement = document.getElementById('burger');\r\n \t\tburgerElement.addEventListener('transitionstart', onTransitionStart)\r\n \t\tburgerElement.addEventListener('transitionend', onTransitionEnd)\r\n \t}, [])\r\n\r\n \t// ============================== Set Classes ============================= //\r\n \t// burger is open\r\n \tuseEffect(() => {\r\n \t\tif(burgerIsOpen) setBurgerOpenClass('burger-open')\r\n \t\tif(!burgerIsOpen) setBurgerOpenClass('burger-closed')\r\n \t}, [burgerIsOpen])\r\n\r\n \t// burger bar colors\r\n\tuseEffect(() => {\r\n\t\tif(isOver && !isDown && !isAnimating) { \r\n\t\t\tsetBurgerBarClass('burger-bar-hover');\r\n\t\t} else if(!isOver && !isDown && !isAnimating) { \r\n\t\t\tsetBurgerBarClass('burger-bar-out');\r\n\t\t} else if(isDown || isAnimating) { \r\n\t\t\tsetBurgerBarClass('burger-bar-down');\r\n\t\t}\r\n\t}, [isOver, isDown, isAnimating]); \r\n\t\r\n\t// ============================== Output ============================= //\r\n\treturn (\r\n\t\t<div className={`burger ${burgerOpenClass}`} id=\"burger\"\r\n\t\t\tonMouseOver={handleMouseOver} onMouseOut={handleMouseOut}\r\n\t\t\tonMouseDown={handleMouseDown} onMouseUp={handleMouseUp}>\r\n\t\t\t\t<div className={`burger-bar ${burgerBarClass}`}></div>\r\n\t\t\t\t<div className={`burger-bar ${burgerBarClass}`}></div>\r\n\t\t\t\t<div className={`burger-bar ${burgerBarClass}`}></div>\r\n\t\t</div> \r\n\t)\r\n} ","// ================ trigger fn on transition start and end, one time\r\nexport function onTransition(id, propertyName, onStart = null, onEnd = null) {\r\n\tconst element = document.getElementById(id); \r\n\r\n\tconst thisStartFn = transitionStartHandler.bind(null, id, propertyName, onStart);\r\n\tconst thisEndFn = transitionEndHandler.bind(null, element, id, propertyName, onStart, onEnd);\r\n\r\n\telement.addEventListener('transitionstart', thisStartFn, {once: true})\r\n\telement.addEventListener('transitionend', thisEndFn, {once: true})\r\n}\r\n\r\nfunction transitionStartHandler(id, propertyName, onStart, e) { \r\n\tif(e.propertyName === propertyName && e.srcElement.id === id) {\r\n\t\tonStart && onStart()\r\n\t}\r\n}\r\n\r\nfunction transitionEndHandler(element, id, propertyName, onStart, onEnd, e) {\r\n\tif(e.propertyName === propertyName && e.srcElement.id === id) { \r\n\t\tonEnd && onEnd() \r\n\t}\r\n}\r\n\r\n// ================ check if overflowing\r\nexport function elementWidthIsOverflowing(id) {\r\n\tconst element = document.getElementById(id);\r\n\treturn element.scrollWidth > element.clientWidth;\r\n}\r\n\r\nexport function elementHeightIsOverflowing(id) {\r\n\tconst element = document.getElementById(id);\r\n\treturn element.scrollHeight > element.clientHeight;\r\n}\r\n\r\nexport function elementHasInlineSize(id) {\r\n\tconst element = document.getElementById(id); \r\n\r\n\treturn !(element.style.width === '' && element.style.height === '');\r\n}\r\n\r\nexport function removeInlineSize(id) { \r\n\tconst element = document.getElementById(id);  \r\n\telement.style.width = '';\r\n\telement.style.height = ''; \r\n}\r\n\r\nexport function setToElementSize(idOne, idTwo) {\r\n\tconst elementOne = document.getElementById(idOne);\r\n\tconst elementTwo = document.getElementById(idTwo);  \r\n\r\n\tconst elementTwoStyle = window.getComputedStyle(elementTwo);  \r\n\r\n\telementOne.style.width = elementTwoStyle.width;\r\n\telementOne.style.height = elementTwoStyle.height;\r\n}\r\n\r\n/*export function setToCurrentSize(id) {\r\n\tconst element = document.getElementById(id);\r\n\telement.style.width = getElementWidth(element);\r\n\telement.style.height = getElementHeight(element);\r\n}\r\n\r\nexport function setToParentSize(id) {\r\n\tconst element = document.getElementById(id)\r\n\tconst parentElement = element.parentNode; \r\n\r\n\telement.style.width =\tgetElementWidth(parentElement);\r\n\telement.style.height = getElementHeight(parentElement);\r\n}*/\r\n\r\n/* ------------ */\r\n\r\nexport function detectTransition(id, propertyName, onChange) {\r\n\tlet element = document.getElementById(id);\r\n\tif(!element) {\r\n\t\tconsole.log('Error: detectTransition element not found: id = ', id)\r\n\t\treturn;\r\n\t}  \r\n\r\n\telement.addEventListener('transitionstart', (e) => {\r\n\t\tif(e.propertyName === propertyName && e.srcElement.id === id) {\r\n\t\t\tonChange(true)\r\n\t\t}\r\n\t})\r\n\r\n \telement.addEventListener('transitionend', (e) => { \r\n\t\tif(e.propertyName === propertyName && e.srcElement.id === id) {\r\n\t\t\tonChange(false)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nexport function detectTransitions(id, propertyNames, onChange) {\r\n\t// console.log('detectTransitions ===========================')\r\n\t// console.log('propertyNames', propertyNames)\r\n\tpropertyNames.forEach(propertyName => {\r\n\t\t// console.log('propertyName', propertyName)\r\n\t\taddListeners(id, propertyName, onChange)\r\n\t})\r\n}\r\n\r\nfunction addListeners(id, propertyName, onChange) {\r\n\tlet element = document.getElementById(id);\r\n\tlet numTransitions = 0; \r\n\r\n\tif(!element) {\r\n\t\tconsole.log('Error: detectTransition element not found: id = ', id)\r\n\t\treturn;\r\n\t}   \r\n\t\r\n\telement.addEventListener('transitionstart', (e) => {\r\n\t\t\r\n\t\tif(e.propertyName === propertyName && e.srcElement.id === id) { \r\n\t\t\tnumTransitions += 1;\r\n\t\t\tif(numTransitions === 1) onChange(true)\r\n\t\t}\r\n\t})\r\n\r\n \telement.addEventListener('transitionend', (e) => {\r\n\t\tif(e.propertyName === propertyName && e.srcElement.id === id) { \r\n\t\t\t// console.log(e) \r\n\t\t\tnumTransitions -= 1;\r\n\t\t\tif(numTransitions === 0) onChange(false)\r\n\t\t}\r\n\t})\r\n}","import React, {useState, useEffect} from 'react';\r\nimport './OpenCloseToggleStyle.css';\r\nimport {detectTransition} from './../../utils.js';\r\n\r\nexport default function OpenCloseToggle({\r\n\ttoggleIsOpen = false, \r\n\tparentIsAnimating = false, \r\n\thandleClick = () => { console.log('no function passed to OpenCloseToggle')}, \r\n\ti = 0}) { \r\n\t// ================== Ids ================== //\r\n\tconst vertLineId = 'vert-line-' + i;\r\n\tconst horizLineId = 'horiz-line-' + i;\r\n\tconst openCloseToggleId = 'open-close-toggle' + i;\r\n\r\n\t// ================== Status ================== //\r\n\tconst [lineIsAnimating, setLineIsAnimating] = useState(false);\r\n\tconst [cursorLocation, setCursorLocation] = useState('');\r\n\tconst [cursorStatus, setCursorStatus] = useState(''); \r\n\tconst [isAnimating, setIsAnimating] = useState(false);\r\n\r\n\t// ================== Classes ================== //\r\n\tconst [lineDirectionClass, setLineDirectionClass] = useState(toggleIsOpen ? 'line-open' : 'line-closed');\r\n\tconst [lineColorClass, setLineColorClass] = useState('line-out');\r\n\r\n\t// ================== Event Handlers ================== //\r\n\tfunction handleDown() {\r\n\t\thandleClick();\r\n\t\tsetCursorStatus('down'); \r\n\t}\r\n\r\n\tfunction handleUp() {\r\n\t\tsetCursorStatus('up'); \r\n\t}\r\n\r\n\tfunction handleOver() {\r\n\t\tsetCursorLocation('over');\r\n\t}\r\n\r\n\tfunction handleOut(e) {  \r\n\t\tif(e.target.id !== vertLineId && e.target.id !== horizLineId &&\r\n\t\t\te.relatedTarget.id !== vertLineId && e.relatedTarget.id !== horizLineId) { \r\n\t\t\tsetCursorLocation('out'); \r\n\t\t\tsetCursorStatus(''); \r\n\t\t}\r\n\t} \r\n\r\n\t// ================== Detect Events ================== //\r\n\tuseEffect(() => {\r\n\t\tdetectTransition(vertLineId, 'transform', setLineIsAnimating)\r\n\t}, [])\r\n\r\n\t// ================== Set Classes ================== //\r\n\t// ========== Line Color Class //\r\n\tuseEffect(() => {\t\r\n\t\t// cursor\r\n\t\tif(cursorLocation === 'over' && cursorStatus === '') {\r\n\t\t\tsetLineColorClass('line-over');\r\n\t\t} else if(cursorLocation === 'out' && !isAnimating) {\r\n\t\t\tsetLineColorClass('line-out');\r\n\t\t} else if(cursorLocation === 'over' && cursorStatus === 'up') {\r\n\t\t\tsetLineColorClass('line-up');\r\n\t\t} else if(cursorStatus === 'down' && cursorLocation === 'over') {\r\n\t\t\tsetLineColorClass('line-down'); \r\n\t\t}\r\n\r\n\t \tif(isAnimating && cursorLocation === 'out') {\r\n\t\t\tsetLineColorClass('line-animating');\r\n\t\t} \r\n\t}, [cursorStatus, cursorLocation, isAnimating])\r\n\r\n\t// ========== Line direction class //\r\n\tuseEffect(() => {\r\n\t\tif(toggleIsOpen) {\r\n\t\t\tsetLineDirectionClass('line-open');\r\n\t\t} else {\r\n\t\t\tsetLineDirectionClass('line-closed');\r\n\t\t} \r\n\t}, [toggleIsOpen]);\r\n\r\n\t// ================== Set Status ================== //\r\n\tuseEffect(() => {\r\n\t\tif(parentIsAnimating || lineIsAnimating) {\r\n\t\t\tsetIsAnimating(true)\r\n\t\t} else {\t\r\n\t\t\tsetIsAnimating(false)\r\n\t\t}\r\n\t}, [parentIsAnimating, lineIsAnimating])\r\n\r\n\t// ================== Console logs ================== //\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('lineIsAnimating', lineIsAnimating)\r\n\t// }, [lineIsAnimating])\r\n\r\n\t// ================== Componenet ================== //\r\n\treturn (\r\n\t\t<div className=\"open-close-toggle\" \t\r\n\t\t\tid={openCloseToggleId}\r\n\t\t\tonMouseOver={handleOver}\r\n\t\t\tonMouseOut={handleOut}\r\n\t\t\tonMouseDown={handleDown}\r\n\t\t\tonMouseUp={handleUp}>\r\n\t\t\t<div className={`line ${lineColorClass}`} id={horizLineId}></div>\r\n\t\t\t<div className={`line ${lineColorClass} ${lineDirectionClass}`} id={vertLineId}></div>\r\n\t\t</div> \r\n\t)\r\n}\r\n\r\n/* ==================== Bin\r\n\t/*const [lineColorClass, setLineColorClass] = useState('');\r\n\tconst [lineAnimationClass, setLineAnimationClass] = useState('');\r\n\r\n\tconst [animationStatus, setAnimationStatus] = useState('');\r\n\r\n\tconst [cursorLocation, setCursorLocation] = useState('out')\r\n\tconst [cursorStatus, setCursorStatus] = useState('up');\r\n\r\n\tconst openingDelay = 1000;\r\n\tconst closingDelay = 0;\r\n\tconst animationTime = 1000;\r\n\r\n\tfunction handleOver() {\r\n\t\tsetCursorLocation('over');\r\n\t}\r\n\r\n\tfunction handleOut() {\r\n\t\tsetCursorLocation('out');\r\n\t\tsetCursorStatus('up');\r\n\t}\r\n\r\n\tfunction handleDown() {\r\n\t\thandleClick();\r\n\t\tsetCursorStatus('down');\t \r\n\t\tanimate();\r\n\t}\r\n\r\n\tfunction handleUp() {\r\n\t\tsetCursorStatus('up');\r\n\t}\r\n\r\n\tfunction animate() {\r\n\t\tconst newStatus = isOpen ? 'closing' : 'opening';\r\n\t\tsetAnimationStatus(newStatus);\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetAnimationStatus('');\r\n\t\t}, animationDelay + animationTime)\r\n\t}\r\n\r\n\tuseEffect(() => { \r\n\t\tlet newLineColorClass = '';  \r\n\r\n\t\t// over\r\n\t\tif(cursorLocation === 'over') {\r\n\t\t\tif(cursorStatus === 'up') {\r\n\t\t\t\tnewLineColorClass = 'line-over';\r\n\t\t\t// down\r\n\t\t\t} else if(cursorStatus === 'down') {\r\n\t\t\t\tnewLineColorClass = 'line-down';\r\n\t\t\t}\r\n\t\t// out\r\n\t\t}/* else {\r\n\t\t\tif(animationStatus === 'opening' || animationStatus === 'closing') {\r\n\t\t\t\tnewLineColorClass = 'line-animating ';\r\n\t\t\t} \r\n\t\t} \r\n\r\n\t\tsetLineColorClass(newLineColorClass);\r\n\t}, [cursorStatus, cursorLocation, animationStatus])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(animationStatus === 'closing') {\r\n\t\t\tsetLineAnimationClass('line-closing');\r\n\t\t} else if (animationStatus === 'opening') {\r\n\t\t\tsetLineAnimationClass('line-opening');\r\n\t\t} \r\n\t}, [animationStatus])*/\r\n\r\n\t{/* \r\n\t\tonMouseOver={handleOver}\r\n\t\t\tonMouseOut={handleOut}\r\n\t\t\t\r\n\t\t\tonMouseUp={handleUp}\r\n\r\n\t\t\t${lineColorClass}\r\n\t*/}","import React, {useState, useEffect} from 'react'; \r\nimport OpenCloseToggle from './../OpenCloseToggle/OpenCloseToggle.jsx'; \r\nimport './OpenCloseBox.css';\r\n\r\nexport default function OpenCloseBox({\r\n\ttitle = '',\r\n\ti,\r\n\tboxBodyId = null,\r\n\tcontentContainerId = null,\r\n\tbuttons = [],   \r\n\thandleToggleClick = () => {},\r\n\thandleOverflowHidden = () => {},\r\n\tsetContentContainerStatus = () => {}, \r\n\tchildren\r\n}) {  \r\n\t/*\r\n\t\t* show title   \t\r\n\t\t* show buttons  \r\n\t\t* show open close toggle\r\n\r\n\t\t* on press open close toggle\r\n\t\t\t* close overflow the close box\r\n\t\t\t* show width bar on open\r\n\r\n\t\t\t* open box to previous size \r\n\t*/\r\n\r\n\t// =========================== Id's ============================ //\r\n\tconst boxId = `box-${i}`;\r\n\tif(!boxBodyId) boxBodyId = `box-body-${i}`;\r\n\tif(!contentContainerId) contentContainerId = `content-container-${i}`;\r\n\tconst displayContainerId = `display-container-${i}`;\r\n\r\n\t// ======================= State ======================= // \r\n\tconst [clickedOpen, setClickedOpen] = useState(null);\r\n\tconst [boxIsOpen, setBoxIsOpen] = useState(true);\r\n\r\n\tconst [isAnimating, setIsAnimating] = useState(false);\r\n\tconst [toggleIsOpen, setToggleIsOpen] = useState(false);\r\n\r\n\tconst [widthOverflowOnClose, setWidthOverflowOnClose] = useState(false);\r\n\tconst [heightOverflowOnClose, setHeightOverflowOnClose] = useState(false);\r\n\tconst [savedHeight, setSavedHeight] = useState(null);\r\n\r\n\tconst [widthIsOverflowing, setWidthIsOverflowing] = useState(false);\r\n\tconst [heightIsOverflowing, setHeightIsOverflowing] = useState(false);\r\n\tconst [overflowIsShrinking, setOverflowIsShrinking] = useState(false);\r\n\r\n\tconst [boxWidthTransitionHasEnded, setBoxWidthTransitionHasEnded] = useState(false);\r\n\r\n\t// ======================= Classes ======================= //\r\n\tconst [boxOpenClass, setBoxOpenClass] = useState('box-open');\r\n\tconst [contentContainerOpenClass, setContentContainerOpenClass] = useState('content-container-open');\r\n\r\n\t// ======================= Event Handlers ======================= //\r\n\tfunction onClickOpenCloseToggle() {\r\n\t\tif(!isAnimating) {\r\n\t\t\tlet newValue;\r\n\r\n\t\t\tif(clickedOpen === null) newValue = false;\r\n\t\t\tif(clickedOpen === false) newValue = true;\r\n\t\t\tif(clickedOpen === true) newValue = false;\r\n\r\n\t\t\tsetClickedOpen(newValue) \r\n\t\t\thandleToggleClick(newValue, elementWidthIsOverflowing(boxBodyId), elementHeightIsOverflowing(boxBodyId))\r\n\t\t} \r\n\t} \r\n\r\n\tfunction onPressBoxOpening() { \r\n\t\tsetIsAnimating(true)\r\n\t\tsetBoxOpenClass('box-open')\r\n\t\t\r\n\t\tif(widthOverflowOnClose) setContentContainerOpenClass('content-container-opening-x')\r\n\t\tif(!widthOverflowOnClose) setContentContainerOpenClass('content-container-opening-x-max-width')\r\n\t\tremoveInlineWidth(contentContainerId)\r\n\t\taddListeners(boxId, 'width', () => { setBoxWidthTransitionHasEnded(true) })\r\n\t}\r\n\r\n\tfunction onPressBoxClosing() { \r\n\t\tsetIsAnimating(true)\r\n\t\tconsole.log('press closing ----------------------')\r\n\t\t\r\n\t\tif(boxIsOpen) {\r\n\t\t\tconst thisWidthIsOverflowing = elementWidthIsOverflowing(boxBodyId);\r\n\t\t\tconsole.log('thisWidthIsOverflowing --', thisWidthIsOverflowing)\r\n\t\t\tsetWidthOverflowOnClose(thisWidthIsOverflowing) \r\n\r\n\t\t\tconst thisHeightIsOverflowing = elementHeightIsOverflowing(boxBodyId);\r\n\t\t\tsetHeightOverflowOnClose(thisHeightIsOverflowing)\r\n\t\t\tconsole.log('thisHeightIsOverflowing ===========', thisHeightIsOverflowing)\r\n\t  \r\n\t\t\tif(thisWidthIsOverflowing || thisHeightIsOverflowing) setOverflowIsShrinking(true)\r\n\t\t\tif(thisWidthIsOverflowing) closeWidthOverflow()\r\n\t\t\tif(thisHeightIsOverflowing) {\r\n\t\t\t\tsaveHeight(contentContainerId)\r\n\t\t\t\tcloseHeightOverflow() \r\n\t\t\t}\r\n\r\n\t\t\tif(!thisWidthIsOverflowing && !thisHeightIsOverflowing) onBoxClosing() \r\n\t\t}\r\n\r\n\t\tif(!boxIsOpen) {\r\n\t\t\tonBoxClosing() \r\n\t\t}\r\n\t}\r\n\r\n\tfunction onBoxClosing() { \r\n\t\tsetBoxIsOpen(false)\r\n\t\tsetBoxOpenClass('box-closed')\r\n\t\tsetContentContainerOpenClass('content-container-closing-x')\r\n\t\taddListeners(boxId, 'width', () => onBoxClosed())\r\n\t}\r\n\r\n\tfunction onBoxWidthOpen() { \r\n\t\tsetToggleIsOpen(false)\r\n\t\taddListeners(contentContainerId, 'min-height', () => { onContentContainerOpen() })\r\n\r\n\t\tif(heightOverflowOnClose) {\r\n\t\t\tsetHeightTo(contentContainerId, '0') \r\n\t\t\tsetHeightTo(contentContainerId, savedHeight)\r\n\t\t\tsetContentContainerOpenClass('content-container-opening-y')\r\n\t\t}\r\n\r\n\t\tif(!heightOverflowOnClose) {\r\n\t\t\tsetHeightTo(contentContainerId, '0') \r\n\t\t\tsetHeightToFull(contentContainerId, boxBodyId)\r\n\t\t\tsetContentContainerOpenClass('content-container-opening-y')\r\n\t\t}\r\n\t} \r\n\r\n\tfunction onContentContainerOpen() { \r\n\t\tsetIsAnimating(false)\r\n\t\tremoveInlineHeight(contentContainerId)\r\n\t\tsetContentContainerOpenClass('content-container-open')\r\n\t}\r\n\r\n\tfunction onContentContainerClosed() { \r\n\t\tsetIsAnimating(false)\r\n\t}\r\n\r\n\tfunction onBoxClosed() {\r\n\t\tsetToggleIsOpen(true)\r\n\t\tsetContentContainerOpenClass('content-container-closing-y')\r\n\t\taddListeners(contentContainerId, 'height', () => { onContentContainerClosed() })\r\n\t}\r\n\r\n\tfunction onOverflowClosed() { \r\n\t\tonBoxClosing()\r\n\t\thandleOverflowHidden()\r\n\t}\r\n\r\n\t// ======================= Helper Fns ========================== //  \r\n\tfunction addListeners(id, property, fn) { \r\n\t\tconst element = document.getElementById(id);\r\n\r\n\t\tfunction handleEnd(e) {\r\n\t\t\tif(e.propertyName === property && e.srcElement.id === id) {\r\n\t\t\t\tfn()\r\n\t\t\t\telement.removeEventListener('transitionend', handleEnd)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telement.addEventListener('transitionend', handleEnd)\r\n\t}\r\n\r\n\tfunction removeInlineHeight(id) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\telement.style.height = '';\r\n\t}\r\n\r\n\tfunction removeInlineWidth(id) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\telement.style.width = '';\r\n\t}\r\n\r\n\tfunction closeWidthOverflow() {\r\n\t\tsetWidthIsOverflowing(true)\r\n\t\taddListeners(contentContainerId, 'width', () => { setWidthIsOverflowing(false)})\r\n\t\tkeepWidth(contentContainerId)\r\n\t\tsetWidthToFull(contentContainerId, boxBodyId)\r\n\t\tsetContentContainerOpenClass('content-container-closing-overflow') \r\n\t}\r\n\r\n\tfunction closeHeightOverflow() {\r\n\t\tsetHeightIsOverflowing(true)\r\n\t\taddListeners(contentContainerId, 'height', () => { setHeightIsOverflowing(false)})\r\n\t\tkeepHeight(contentContainerId)\r\n\t\tsetHeightToFull(contentContainerId, boxBodyId)\r\n\t\tsetContentContainerOpenClass('content-container-closing-overflow')\r\n\t}\r\n\r\n\tfunction keepWidth(id) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\tconst width = element.clientWidth + 'px';\r\n \r\n\t\telement.style.width = width; \r\n\t}\r\n\r\n\tfunction keepHeight(id) {\r\n\t\tconst element = document.getElementById(id);  \r\n\t\tconst height = element.offsetHeight + 'px';  \r\n\t\telement.style.height = height;\r\n\t}\r\n\r\n\tfunction saveHeight(id) {\r\n\t\tconst element = document.getElementById(id);  \r\n\t\tconst height = element.offsetHeight + 'px';   \r\n\t\tsetSavedHeight(height)\r\n\t}\r\n\r\n\tfunction setHeightTo(id, height) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\telement.style.height = height;\r\n\t}\r\n\r\n\tfunction setHeightToFull(id, heightId) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\tconst heightElement = document.getElementById(heightId); \r\n\t\tconst height = heightElement.clientHeight;  \r\n\t\telement.style.height = height + 'px';\r\n\t}\r\n\r\n\tfunction setWidthToFull(id, widthId) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\tconst widthElement = document.getElementById(widthId); \r\n\t\tconst width = widthElement.offsetWidth; \r\n\t\telement.style.width = width + 'px';\r\n\t}\r\n\r\n\tfunction elementWidthIsOverflowing(id) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\tif(!element) return;\r\n\r\n\t  return element.scrollWidth > element.clientWidth;\r\n\t}\r\n\r\n\tfunction elementHeightIsOverflowing(id) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\tif(!element) return;\r\n\r\n\t  return element.scrollHeight > element.clientHeight;\r\n\t}\r\n\r\n\tfunction checkIfOverflowing(id) {\r\n\t\treturn elementWidthIsOverflowing(id) || elementHeightIsOverflowing(id);\r\n\t}\r\n\r\n\t// ======================= Event Detects ======================= //\r\n\t// toggle click triggers\r\n\tuseEffect(() => {\r\n\t\tif(clickedOpen === true) onPressBoxOpening()\r\n\t\tif(clickedOpen === false) onPressBoxClosing()\r\n\t\tif(clickedOpen === null) onContentContainerOpen()\r\n\t}, [clickedOpen]) \r\n\r\n\t// detect box resized\r\n\tuseEffect(() => {\r\n\t\tif(overflowIsShrinking) {\r\n\t\t\tif(!widthIsOverflowing && !heightIsOverflowing) { \r\n\t\t\t\tonOverflowClosed()\r\n\t\t\t\tsetOverflowIsShrinking(false)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [overflowIsShrinking, widthIsOverflowing, heightIsOverflowing])\r\n\r\n\t// detect box open \r\n\tuseEffect(() => { \r\n\t\tif(clickedOpen && boxWidthTransitionHasEnded) {\r\n\t\t\tonBoxWidthOpen()\r\n\t\t\tsetBoxWidthTransitionHasEnded(false)\r\n\t\t\tsetBoxIsOpen(true)\r\n\t\t}\r\n\t}, [clickedOpen, boxWidthTransitionHasEnded])\r\n\r\n\t// =========================== Output ============================ //\r\n\treturn (\r\n\t\t<div className={`box ${boxOpenClass}`} id={boxId}>\r\n\t\t\t<div className=\"box-header\">\r\n\t\t\t\t<div className=\"box-buttons-container\">\r\n\t\t\t\t\t{buttons.map(button => button)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"title\">{title}</div>\r\n\r\n\t\t\t\t<div className=\"open-close-toggle-container\">\r\n\t\t\t\t\t<OpenCloseToggle \t\r\n\t\t\t\t\t\thandleClick={onClickOpenCloseToggle}\r\n\t\t\t\t\t\ttoggleIsOpen={toggleIsOpen}\r\n\t\t\t\t\t\tparentIsAnimating={isAnimating}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={`box-body`} id={boxBodyId}> \r\n\t\t\t\t<div className={`content-container ${contentContainerOpenClass}`} id={contentContainerId}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Burger from './Burger/Burger.jsx';\r\nimport BurgerMenu from './Burger/BurgerMenu.jsx';\r\nimport Text from './Text.jsx';\r\nimport OpenCloseBox from './OpenCloseBox/OpenCloseBox.jsx'; \r\nimport './LevelText.css';\r\n\r\nexport default function LevelText({\r\n\ti, \r\n\ttitles, \r\n\tlevelNum, \r\n\tsetLevelNum, \r\n\tsetStyle, \r\n\tdefaultStyle\r\n}) {\r\n\t/*\r\n\t\t* show title\r\n\t\t\r\n\t\t* show text\r\n\r\n\t\t* when new style selected change css string\r\n\t\t* when new style unselected change back css string\r\n\r\n\t\t* burger\r\n\t\t\t* show all titles when clicked\r\n\r\n\t\t\t* change level and close when click title\r\n\r\n\t\tanimate on open / close box\r\n\t\t\t* full\r\n\t\t\t* when press before closed\r\n\t\t\t* make so no bottom scroll\r\n\t\t\tmake so has vert scroll - make content box expand \r\n\r\n\t\tfix - adjust width when box size changes\r\n\t\t\tthis\r\n\t\t\tother boxes\r\n\t*/\r\n\t// ======================================= Ids ======================================= //\r\n\tconst textContainerId = `text-container-${i}`;\r\n\tconst textBodyId = `text-body-${i}`;\r\n\r\n\t// ======================================= State ======================================= //\r\n\tconst [burgerIsOpen, setBurgerIsOpen] = useState(false);\r\n\tconst buttons = [<Burger burgerIsOpen={burgerIsOpen} setBurgerIsOpen={setBurgerIsOpen}/>]; \r\n \r\n\tconst [title, setTitle] = useState(titles[levelNum]);\r\n\tconst [selectedStyle, setSelectedStyle] = useState('');\r\n\r\n\t// const [boxHasClosed, setBoxHasClosed] = useState(false);\r\n\r\n\t// ======================================= Class ======================================= //\r\n\tconst [textBodyOpenClass, setTextBodyOpenClass] = useState('');\r\n\t// const [boxStatus, setBoxStatus] = useState('');\r\n\t// const [overflowOpenClass, setOverflowOpenClass] = useState('');\r\n\r\n\t// ======================================= Event Handlers ================================== //\r\n\tfunction handleBurgerClick(option) { \r\n\t\tconst newLevelNum = titles.indexOf(option);\r\n\t\tsetLevelNum(newLevelNum)\r\n\t}\r\n\r\n\tfunction handleToggleClick(boxIsOpen, widthIsOverflowing, heightIsOverflowing) {\r\n\t\tconsole.log('toggle clicked === level text')\r\n\t\tconsole.log('heightIsOverflowing', heightIsOverflowing)\r\n\t\tif(boxIsOpen) onBoxOpening()\r\n\t\tif(!boxIsOpen) onBoxClosing(heightIsOverflowing) \r\n\t}\r\n\r\n\tfunction onOverflowHidden() {\r\n\t\tsetTextBodyOpenClass('text-body-closing-overflow-hidden')\r\n\t}\r\n\r\n\tfunction onBoxClosing(heightIsOverflowing) { \r\n\t\tfixContainerWidth(textBodyId)\r\n\t\tif(!heightIsOverflowing) setTextBodyOpenClass('text-body-closing-no-overflow')\r\n\t}\r\n\r\n\tfunction onBoxOpening() {\r\n\t\tremoveInlineWidth(textBodyId)\r\n\t\tsetTextBodyOpenClass('text-body-opening')\r\n\t}\r\n\r\n\t/*function onBoxOpening() { \r\n\t\tif(boxHasClosed) resetContainerWidth()\r\n\t} \r\n\r\n\tfunction onBoxOpen() {\r\n\t\tsetBoxHasClosed(false)\r\n\t\tsetOverflowOpenClass('overflow-barrier-opening')\r\n\t}\r\n\r\n\tfunction onBoxClosed() {\r\n\t\tsetBoxHasClosed(true)\r\n\t}*/\r\n\r\n\t// ======================================= Helper Fns ================================== //\r\n\tfunction fixContainerWidth(id) { \r\n\t\tconst element = document.getElementById(id);\r\n\t\tconst elementWidth = getComputedWidth(element); \r\n\r\n\t\telement.style.width = elementWidth; \r\n\t\telement.style['max-width'] = elementWidth;\r\n\t}\r\n\r\n\tfunction removeInlineWidth(id) {\r\n\t\tconst element = document.getElementById(id);\r\n\t\telement.style.width = '';\r\n\t\telement.style['max-width'] = '';\r\n\t}\r\n\r\n\tfunction getComputedWidth(element) {\r\n\t\tconst style = window.getComputedStyle(element);\r\n\t\treturn style.width;\r\n\t} \r\n\r\n\t// ======================================= Update ======================================= //\r\n\tuseEffect(() => {\r\n\t\tconsole.log(selectedStyle)\r\n\t\tif(selectedStyle) setStyle(selectedStyle)\r\n\t\tif(!selectedStyle) setStyle(defaultStyle)\r\n\t}, [selectedStyle])\r\n\r\n\tuseEffect(() => { \r\n\t\tsetTitle(titles[levelNum]) \r\n\t}, [levelNum])\r\n \r\n\r\n\t// ======================================= Trigger Events =============================== //\r\n\t/*useEffect(() => { \r\n\t\tif(boxStatus === 'box-closing') onBoxClosing()\r\n\t\tif(boxStatus === 'box-opening') onBoxOpening()\r\n\t\tif(boxStatus === 'box-closed') onBoxClosed()\r\n\t\tif(boxStatus === 'box-open') onBoxOpen()\r\n\t}, [boxStatus])*/\r\n\r\n\t// ======================================= Output ======================================= //\r\n\treturn ( \r\n\t\t<OpenCloseBox title={title} i={i} buttons={buttons} handleToggleClick={handleToggleClick} handleOverflowHidden={onOverflowHidden}>\r\n\t\t\t{/*<BurgerMenu isOpen={burgerIsOpen} setIsOpen={setBurgerIsOpen} options={titles} handleClick={handleBurgerClick}/>\r\n\t\t\t\r\n\t\t\t<div className={`text-body ${textBodyOpenClass}`} id={textBodyId}>\r\n\t\t\t \t<Text levelNum={levelNum} setSelectedStyle={setSelectedStyle}/> \r\n\t\t\t</div> */}\r\n\t\t</OpenCloseBox> \r\n\t)\r\n}\r\n\r\n{/* \r\n<OpenCloseBox title={title} i={i} buttons={buttons}>\r\n<div className={`overflow-barrier ${overflowOpenClass}`}> \t</div> \r\n\t\t<div className=\"text-container\" id={textContainerId}>\r\n\t\t\t<BurgerMenu isOpen={burgerIsOpen} setIsOpen={setBurgerIsOpen} options={titles} handleClick={handleBurgerClick}/>\r\n\t\t\t<div className={\"text-body\"} id={textBodyId}>\r\n\t\t\t\t<Text setSelectedStyle={setSelectedStyle}/>\r\n\t\t\t</div>\r\n\t\t</div> \r\n</OpenCloseBox>\r\n\r\n*/}","import React from 'react';\r\nimport './Button.css';\r\n\r\nexport default function Button({children}) {\r\n\treturn (\r\n\t\t<div className=\"box-button\">\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport Button from './../Button.jsx';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport './RefreshButton.css';\r\n\r\nexport default function RefreshButton({onClick, i}) {\r\n\t// ====================== Ids ====================== //\r\n\tconst refreshButtonId = `refresh-button-${i}`;\r\n\tconst refreshIconId = `refresh-icons-${i}`;\r\n\r\n\t// ====================== State ====================== //\r\n\tconst [rotateNum, setRotateNum] = useState(0);  \r\n\tconst iconStyle = {\r\n\t\t'transform': `rotate(${rotateNum}deg)`,\r\n\t\t'transition': 'transform 1000ms',\r\n\t} \r\n\r\n\t// ====================== Status ====================== //\r\n\tconst [cursorIsOver, setCursorIsOver] = useState(false);\r\n\tconst [cursorIsDown, setCursorIsDown] = useState(false);\r\n\tconst [isAnimating, setIsAnimating] = useState(false); \r\n\r\n\t// ====================== Class ====================== //\r\n\tconst [refreshColorClass, setRefreshColorClass] = useState('refresh-button'); \r\n\r\n\t// ====================== Event Handlers ====================== //\r\n\tfunction handleMouseOver() {  \r\n\t\tsetCursorIsOver(true)\r\n\t}\r\n\r\n\tfunction handleMouseOut(e) {\r\n\t\tsetCursorIsOver(false)\r\n\t\tsetCursorIsDown(false)\r\n\t}\r\n\r\n\tfunction handleMouseDown() {\r\n\t\tonClick()\r\n\t\tsetCursorIsDown(true)\r\n\t\tsetIsAnimating(true)\r\n\t\tsetRotateNum(oldVal => oldVal + 360)\r\n\t}\r\n\r\n\tfunction handleMouseUp() {\r\n\t\tsetCursorIsDown(false)\r\n\t} \r\n\r\n\t// ====================== Event Listeners Fns ====================== //\r\n\tfunction handleTransitionEnd(e) {\r\n\t\tif(e.propertyName === 'transform') {\r\n\t\t\tsetIsAnimating(false)\r\n\t\t}\r\n\t}\r\n\r\n\t// ====================== Listen for Animation End ====================== //\r\n\tuseEffect(() => {\r\n\t\tif(cursorIsDown) {\r\n\t\t\tconst cursorElement = document.getElementById(refreshIconId);\r\n\t\t\tcursorElement.addEventListener('transitionend', handleTransitionEnd)\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tconst cursorElement = document.getElementById(refreshIconId);\r\n\t\t\tcursorElement.removeEventListener('transitionend', handleTransitionEnd)\r\n\t\t}\r\n\t}, [isAnimating])\r\n\r\n\t// ====================== Set Color Class ====================== //\r\n\tuseEffect(() => {  \r\n\t\tlet newClass;\r\n\r\n\t\tif(cursorIsOver) {\r\n\t\t\tif(cursorIsDown) newClass = 'refresh-button-down';\r\n\t\t\telse newClass = 'refresh-button-over';\r\n\t\t}\r\n\r\n\t\tif(!cursorIsOver) {\r\n\t\t\tif(isAnimating) newClass = 'refresh-button-down';\r\n\t\t\telse newClass = 'refresh-button-out';\r\n\t\t} \r\n\r\n\t\tsetRefreshColorClass(newClass);\r\n\t}, [cursorIsDown, cursorIsOver, isAnimating]) \r\n\r\n\t// ====================== Console logs ====================== //\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('cursorIsOver', cursorIsOver)\r\n\t// }, [cursorIsOver])\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('cursorIsDown', cursorIsDown)\r\n\t// }, [cursorIsDown])\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('isAnimating', isAnimating)\r\n\t// }, [isAnimating])\r\n\r\n\t// ====================== Output ====================== //\r\n\treturn ( \r\n\t\t<Button>\r\n\t\t\t<div className={`refresh-button ${refreshColorClass}`}\r\n\t\t\t\tid={refreshButtonId}\r\n\t\t\t\tonMouseOver={handleMouseOver}\r\n\t\t\t\tonMouseOut={handleMouseOut}\r\n\t\t\t\tonMouseDown={handleMouseDown}\r\n\t\t\t\tonMouseUp={handleMouseUp}\r\n\t\t\t\t>\r\n\t\t\t\t<RefreshIcon \r\n\t\t\t\t\tclassName=\"refresh-icon\" \r\n\t\t\t\t\tid={refreshIconId}\r\n\t\t\t\t\tstyle={iconStyle} \r\n\t\t\t\t\tfontSize=\"inherit\" \r\n\t\t\t\t/>\r\n\t\t\t</div> \r\n\t\t</Button>\r\n\t)\r\n}\r\n ","import React, {useState, useEffect} from 'react'; \r\nimport OpenCloseBox from './OpenCloseBox/OpenCloseBox.jsx';\r\nimport RefreshButton from './Buttons/RefreshButton/RefreshButton.jsx';\r\nimport {onTransition} from './../utils.js';\r\nimport './CodeInput.css';\r\n\r\nexport default function CodeInput({\r\n\ttitle, \r\n\ti, \r\n\tcode, \r\n\tsetCode, \r\n\toriginalCode\r\n}) {\r\n\t/*\r\n\t\t* show title\r\n\r\n\t\t* show code\r\n\r\n\t\t* update code on user input\r\n\t\r\n\t\t* reset to original code on refresh press\r\n\r\n\t\t* open and close on toggle press \r\n\t\t\r\n\t\t* scroll on overflow\r\n\r\n\t\t* animate on open and close\r\n\t*/\r\n\t\r\n\t// ===================================== Ids ===================================== //\r\n\tconst codeDisplayId = `code-display-${i}`;\r\n\r\n\t// ===================================== Classes ===================================== //\r\n\tconst [fadeClass, setFadeClass] = useState('code-display-no-fade');\r\n\tconst [openClass, setOpenClass] = useState('code-display-open');\r\n\t\r\n\t// ===================================== Buttons ===================================== //\r\n\tconst buttons = [<RefreshButton onClick={onRefreshClick}/>];\r\n\t\r\n\t// ===================================== Event Handlers ===================================== //\r\n\tfunction onTextChange(e) { \r\n\t\tsizeElementToContent(e.target)\r\n\t\tupdateCode(e.target.value)  \r\n\t}\r\n\r\n\tfunction onRefreshClick() {\r\n\t\tif(code !== originalCode) {\r\n\t\t\tlistenForEndOfFade()\r\n\t\t\tfadeCode()\r\n\t\t} \r\n\t}\r\n\r\n\tfunction onTextFadeEnd() { \r\n\t\tresetCode()\r\n\t\tunfadeCode()\r\n\t} \r\n\r\n\t// ===================================== Helper Fns ===================================== //  \r\n\tfunction fadeCode() {\r\n\t\tsetFadeClass('code-display-fade')\r\n\t}\r\n\r\n\tfunction unfadeCode() {\r\n\t\tsetFadeClass('code-display-no-fade')\r\n\t}\r\n\r\n\tfunction listenForEndOfFade() {\r\n\t\tonTransition(codeDisplayId, 'color', () => {}, onTextFadeEnd)\r\n\t}\r\n\r\n\tfunction resetCode() {\r\n\t\tsetCode(originalCode)\r\n\t}\r\n\r\n\tfunction updateCode(code) {\r\n\t\tsetCode(code)\r\n\t}\r\n\r\n\tfunction sizeElementToContent(element) { \r\n\t\telement.style.width = '';\r\n\t\telement.style.height = '';\r\n \t\t\r\n\t\tif(element.scrollWidth > element.clientWidth) {\r\n\t\t\telement.style.width = element.scrollWidth + 'px';\r\n\t\t}\r\n\r\n\t\tif(element.scrollHeight > element.clientHeight) {\r\n\t\t\telement.style.height = element.scrollHeight + 'px';\r\n\t\t}  \r\n\t} \r\n\t\r\n\t// ===================================== Output ===================================== //\r\n\treturn (\r\n\t\t<OpenCloseBox title={title} i={i} buttons={buttons}>\r\n\t\t\t<textarea \r\n\t\t\t\tclassName={`code-display ${openClass} ${fadeClass}`} \r\n\t\t\t\tid={codeDisplayId} \r\n\t\t\t\tvalue={code} \r\n\t\t\t\tonChange={onTextChange}> \r\n\t\t\t</textarea>\r\n\t\t</OpenCloseBox>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Button from './../Button.jsx';\r\nimport GridOnIcon from '@material-ui/icons/GridOn';\r\nimport './GridButton.css';\r\n\r\nexport default function GridButton({handleClick, gridStatus, setGridStatus, setShowGrid}) {\r\n\t// ====================  Status ========================= //\r\n\tconst [isOver, setIsOver] = useState(false);\r\n\tconst [isDown, setIsDown] = useState(false);\r\n\tconst [isSelected, setIsSelected] = useState(false); \r\n\tconst [gridStatusClass, setGridStatusClass] = useState('');\r\n\r\n\t// ====================  Event Handlers ========================= //\r\n\tfunction handleMouseOver() {\r\n\t\tsetIsOver(true)\r\n\t}\r\n\r\n\tfunction handleMouseOut() {\r\n\t\tsetIsOver(false)\r\n\t\tsetIsDown(false)\r\n\t}\r\n\r\n\tfunction handleMouseDown() {\r\n\t\tsetIsDown(true)\r\n\t\tsetIsSelected(oldVal => !oldVal)\r\n\t}\r\n\r\n\tfunction handleMouseUp() {\r\n\t\tsetIsDown(false)\r\n\t}\r\n\r\n\t// ====================  Update Status ========================= //\r\n\tuseEffect(() => {\r\n\t\tif(isOver) {\r\n\t\t\tif(isDown) setGridStatus('grid-down')\r\n\t\t\telse setGridStatus('grid-over')\r\n\t\t}\r\n\r\n\t\tif(!isOver) {\r\n\t\t\tif(isSelected) setGridStatus('grid-selected')\r\n\t\t\telse setGridStatus('grid-out')\r\n\t\t}\r\n\r\n\t}, [isOver, isDown, isSelected])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tsetShowGrid(isSelected)\r\n\t}, [isSelected])\r\n\r\n\t// ====================  Update Class ========================= //\r\n\tuseEffect(() => {\r\n\t\tlet newClass;\r\n\r\n\t\tif(gridStatus === 'grid-over') newClass = 'grid-button-over';\r\n\t\tif(gridStatus === 'grid-out') newClass = 'grid-button-out';\r\n\t\tif(gridStatus === 'grid-down') newClass = 'grid-button-down';\r\n\t\tif(gridStatus === 'grid-selected') newClass = 'grid-button-selected';\r\n\r\n\t\tsetGridStatusClass(newClass)\r\n\t}, [gridStatus])\r\n\r\n\t// ====================  Console.logs ========================= //\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('gridStatus', gridStatus)\r\n\t// }, [gridStatus])\r\n\r\n\t// ====================  Output ========================= //\r\n\treturn ( \r\n\t\t<Button>\r\n\t\t\t<div onMouseOver={handleMouseOver}\r\n\t\t\t\t\tonMouseOut={handleMouseOut}\r\n\t\t\t\t\tonMouseDown={handleMouseDown} \r\n\t\t\t\t\tonMouseUp={handleMouseUp}\r\n\t\t\t\t\tclassName={`grid-button ${gridStatusClass}`}>\r\n\t\t\t\t<GridOnIcon className=\"grid-icon\" fontSize=\"inherit\"/>\r\n\t\t\t</div>\r\n\t\t</Button>\r\n\t)\r\n}\r\n/*\r\n<Button>\r\n\t\t\t<div onMouseOver={handleMouseOver}\r\n\t\t\t\tonMouseOut={handleMouseOut}\r\n\t\t\t\tonMouseDown={handleMouseDown} \r\n\t\t\t\tonMouseUp={handleMouseUp}\r\n\t\t\t\tclassName={`grid-button ${gridStatusClass}`}>\r\n\t\t\t\t<GridOnIcon className=\"grid-icon\" fontSize=\"inherit\"/>\r\n\t\t\t</div>\r\n\t\t</Button>\r\n*/","import React, {useState, useEffect} from 'react'; \r\nimport './GridOverlayStyle.css';\r\n\r\nexport default function GridOverlay({gridStatus, showGrid}) {   \r\n\tconst numLines = 10;\r\n\tconst showOnHover = true;\r\n\tconst showOnOffHover = false;\r\n\tconst [gridColorClass, setGridColorClass] = useState(''); \r\n\r\n\tuseEffect(() => { \r\n\t\tif(showOnOffHover || !showOnOffHover && showGrid) {\r\n\t\t\tif(gridStatus === 'grid-over') setGridColorClass('grid-line-over')\r\n\t\t\tif(gridStatus === 'grid-down') setGridColorClass('grid-line-down') \r\n\t\t\tif(gridStatus === 'grid-selected') setGridColorClass('grid-line-selected') \r\n\t\t\tif(gridStatus === 'grid-out') setGridColorClass('grid-line-out') \r\n\t\t}\r\n\r\n\t\tif(!showOnOffHover && !showGrid) {\r\n\t\t\tsetGridColorClass('grid-line-out') \r\n\t\t}\r\n\t}, [gridStatus, showGrid])  \r\n\r\n\treturn (\r\n\t\t<div className=\"grid-overlay\">\r\n\t\t\t{\r\n\t\t\t\t[...Array(numLines - 1).keys()].map(() => {\r\n\t\t\t\t\treturn <div className={`grid-line grid-line-horiz ${gridColorClass}`}></div>\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\t[...Array(numLines - 1).keys()].map((i) => {\r\n\t\t\t\t\tconst leftValue = i * (100 / numLines) + '%';\r\n\t\t\t\t\treturn <div className={`grid-line grid-line-vert ${gridColorClass}`} style={{left: leftValue}}></div>\t\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react'; \r\nimport OpenCloseBox from './OpenCloseBox/OpenCloseBox.jsx';\r\nimport RefreshButton from './Buttons/RefreshButton/RefreshButton.jsx';\r\nimport GridButton from './Buttons/GridButton/GridButton.jsx';\r\nimport GridOverlay from './Buttons/GridButton/GridOverlay.jsx';\r\nimport {\r\n\tonTransition, \r\n\telementWidthIsOverflowing, \r\n\telementHeightIsOverflowing, \r\n\telementHasInlineSize,\r\n\tremoveInlineSize,\r\n\tsetToElementSize,\r\n} from './../utils.js';\r\nimport './OutputDisplay.css';\r\n\r\nexport default function OutputDisplay({title, htmlString, cssString, i}) {\r\n\t/*\r\n\t\t* Resizable display box with border\r\n\t\t\r\n\t\t* display box closes / opens when box opens and closes\r\n\r\n\t\t* display box not resizable when box is opening / closing\r\n\t\t\r\n\t\t* Displays output of html and css string\r\n\t\r\n\t\t* Updates when html or css string changed\r\n\t\t\r\n\t\t* handle grid button press\r\n\t\t\r\n\t\t* handle refresh button press  \r\n\t*/\r\n\r\n\t// ================ State ========================= //\r\n\t// ====== Ids //\r\n\tconst outputDisplayId = `output-display-${i}`;\r\n\tconst boxBodyId =  `box-body-${i}`;\r\n\tconst contentContainerId = `content-container-${i}`;\r\n\r\n\t// ====== Box Status //\r\n\tconst [savedHeight, setSavedHeight] = useState(null);\r\n\tconst [savedWidth, setSavedWidth] = useState(null);\r\n\tconst [isOverflowing, setIsOverflowing] = useState(false);\r\n\r\n\t// ====== Grid //\r\n\tconst [gridStatus, setGridStatus] = useState('');\r\n\tconst [showGrid, setShowGrid] = useState(false); \r\n\r\n\t// ====== Source //\r\n\tconst [source, setSource] = useState(null);\r\n\r\n\t// ====== Refresh //\r\n\tconst [isResizing, setIsResizing] = useState(false);\r\n\tconst [numTransitionStarts, setNumTransitionStarts] = useState(0);\r\n\tconst [numTransitionEnds, setNumTransitionEnds] = useState(0); \r\n\r\n\t// ================ Class========================= //\r\n\tconst [outputDisplayClass, setOutputDisplayClass] = useState('output-display-open');\r\n\r\n\t// ================ Buttons ===================== //\r\n\tconst buttons = [\r\n\t\t<RefreshButton onClick={onRefreshClick} i={i}/>,\r\n\t\t<GridButton \r\n\t\t\thandleClick={onGridClick} \r\n\t\t\tgridStatus={gridStatus} \r\n\t\t\tsetGridStatus={setGridStatus}\r\n\t\t\tshowGrid={showGrid}\r\n\t\t\tsetShowGrid={setShowGrid}/>\r\n\t];\t \r\n\r\n\t// ================ Click Handlers ===================== //\r\n\tfunction onGridClick() {\r\n\t\tsetShowGrid(oldVal => !oldVal)\r\n\t} \r\n\r\n\tfunction onRefreshClick() {  \r\n\t\tif(elementHasInlineSize(outputDisplayId)) { \r\n\t\t\tsetOutputDisplayClass('output-display-resizing') \r\n\t\t\tsetIsResizing(true)\r\n\t\t}\r\n\t}\r\n\r\n\t// ================ Event Handlers ===================== //\r\n\tfunction onRefreshStart() { \r\n\t\taddRefreshListeners()\r\n\t\tsetToElementSize(outputDisplayId, boxBodyId)\r\n\t}\r\n\r\n\tfunction onRefreshEnd() {  \r\n\t\tsetOutputDisplayClass('output-display-open')\r\n\t\tsetNumTransitionStarts(0)\r\n\t\tsetNumTransitionEnds(0) \r\n\t\tsetIsResizing(false) \r\n\t}\r\n\r\n\tfunction onRefreshTransitionStart() {\r\n\t\tsetNumTransitionStarts(oldVal => oldVal + 1)\r\n\t}\r\n\r\n\tfunction onRefreshTransitionEnd() {\r\n\t\tsetNumTransitionEnds(oldVal => oldVal + 1)\r\n\t}\r\n\r\n\tfunction onClickToggle(boxIsOpen, widthIsOverflowing, heightIsOverflowing) {\r\n\t\tif(boxIsOpen) onClickBoxOpen(widthIsOverflowing, heightIsOverflowing)\r\n\t\tif(!boxIsOpen) onClickBoxClosed()\r\n\t}\r\n\r\n\tfunction onClickBoxClosed(widthIsOverflowing, heightIsOverflowing) {\r\n\t\tconst thisIsOverflowing = updateIsOverflowing(widthIsOverflowing, heightIsOverflowing)\r\n\r\n\t\tif(thisIsOverflowing) {\r\n\t\t\t// set content container size in pixels to allow animated overflow shrink\r\n\t\t\tsetToElementSize(contentContainerId, outputDisplayId)\r\n\t\t}   \r\n\r\n\t\t// use !important style to over-ride inline width and height\r\n\t\tsetOutputDisplayClass('output-display-closing')\r\n\t}\r\n\r\n\tfunction onClickBoxOpen() {\r\n\t\tsetOutputDisplayClass('output-display-opening')\r\n\r\n\t\tif(isOverflowing) setToSavedSize(outputDisplayId)\r\n\t\taddOutputDisplayListeners()\r\n\t}\r\n\r\n\tfunction onBoxOpen() {\r\n\t\tsetOutputDisplayClass('output-display-open')\r\n\t} \r\n\r\n\tfunction onCodeChange() {\r\n\t\tsetSource(`\r\n  \t\t<html lang=\"en\">\r\n  \t\t<head>\r\n  \t\t\t<style>\r\n  \t\t\t\tbody { padding: 0; margin: 0; overflow: hidden; cursor: default; }\r\n  \t\t\t\t${cssString}\r\n  \t\t\t</style>\r\n  \t\t</head>\r\n  \t\t<body>${htmlString}</body>\r\n  \t\t</html>`);\r\n\t}\r\n\r\n\t// ================ Helper Fns ===================== //\r\n\tfunction updateIsOverflowing(widthIsOverflowing, heightIsOverflowing) {\r\n\t\tconst thisIsOverflowing = widthIsOverflowing || heightIsOverflowing;\r\n\t\tsetIsOverflowing(thisIsOverflowing)\r\n\t\treturn thisIsOverflowing;\r\n\t} \r\n\r\n\tfunction setToSavedSize(id) {\r\n\t\tconst element = document.getElementById(id)\r\n\t\t\r\n\t\tif(savedWidth) element.style.width = savedWidth;\r\n\t\tif(savedHeight) element.style.height = savedHeight;\r\n\r\n\t\tresetSavedSize()\r\n\t}\r\n\r\n\tfunction resetSavedSize() {\r\n\t\tsetSavedWidth(null)\r\n\t\tsetSavedHeight(null)\r\n\t}\r\n \r\n\tfunction addRefreshListeners() {\r\n\t\tconst transitionStart = () => onRefreshTransitionStart();\r\n\t\tconst transitionEnd = () => onRefreshTransitionEnd();\r\n\r\n\t\tonTransition(outputDisplayId, 'width', transitionStart, transitionEnd)\r\n\t\tonTransition(outputDisplayId, 'height', transitionStart, transitionEnd)\r\n\t} \r\n\r\n\tfunction addOutputDisplayListeners() {\r\n\t\tconst transitionStart = () => { };\r\n\t\tconst transitionEnd = () => { onBoxOpen() };\r\n\r\n\t\tonTransition(contentContainerId, 'height', transitionStart, transitionEnd)\r\n\t}\r\n\r\n\t// ============== Detect Refresh Start & End =================== //\r\n\tuseEffect(() => {\r\n\t\tif(isResizing) {\r\n\t\t\tif(numTransitionStarts === 0) {\r\n\t\t\t\tonRefreshStart() \r\n\t\t\t}\r\n\r\n\t\t\tif(numTransitionStarts > 0\r\n\t\t\t&& numTransitionStarts === numTransitionEnds) {\r\n\t\t\t\tonRefreshEnd()\r\n\t\t\t}\r\n\t\t}\r\n\t}, [isResizing, numTransitionStarts, numTransitionEnds]) \r\n\r\n\t// ======== Code Input //\r\n\tuseEffect(() => {  \r\n  \tonCodeChange(htmlString, cssString)\r\n  }, [htmlString, cssString]) \r\n \r\n\t// ============== Output ============================== //\r\n\treturn ( \r\n\t\t<OpenCloseBox \r\n\t\t\ttitle={title} \r\n\t\t\ti={i}\r\n\t\t\thandleToggleClick={onClickToggle}\r\n\t\t\tboxBodyId={boxBodyId}\r\n\t\t\tcontentContainerId={contentContainerId}\r\n\t\t\tbuttons={buttons}>  \r\n\t\t\t<div className={`output-display ${outputDisplayClass}`} id={outputDisplayId}>\r\n\t\t\t\t<iframe srcDoc={source} className=\"iFrame\"/> \r\n\t\t\t\t<GridOverlay gridStatus={gridStatus} showGrid={showGrid}/>\r\n\t\t\t</div>  \r\n\t\t</OpenCloseBox>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react';\r\n/*import LearnBox from './parts/LearnBox.jsx'; */\r\n/*import OutputDisplay from './parts/OutputDisplay.jsx'; */\r\nimport LevelText from './parts/LevelText.jsx';\r\nimport CodeInput from './parts/CodeInput.jsx';\r\nimport OutputDisplay from './parts/OutputDisplay.jsx';\r\n\r\n// import OpenCloseBox from './parts/OpenCloseBox/OpenCloseBox.jsx';\r\n// import CodeBox from './CodeBox.jsx';  \r\n\r\n// import DisplayBox from './DisplayBox.jsx';\r\nimport './LearnStyle.css'; \r\n\r\nimport {html as html_1} from './data/learn/Level_1/html.jsx';\r\nimport {html as html_2} from './data/learn/Level_2/html.jsx';\r\n// import {html_3} from './data/html/html_3.jsx';\r\n// import {html_4} from './data/html/html_4.jsx';\r\n// import {html_5} from './data/html/html_5.jsx';\r\n// import {html_6} from './data/html/html_6.jsx';\r\n// import {html_7} from './data/html/html_7.jsx';\r\n// import {html_8} from './data/html/html_8.jsx';\r\n// import {html_9} from './data/html/html_9.jsx';\r\n// import {html_10} from './data/html/html_10.jsx';\r\n// import {html_11} from './data/html/html_11.jsx';\r\n// import {html_12} from './data/html/html_12.jsx';\r\n// import {html_13} from './data/html/html_13.jsx';\r\n\r\nimport {style as style_1} from './data/learn/Level_1/style.jsx';\r\nimport {style as style_2} from './data/learn/Level_2/style.jsx';\r\n// import {style_3} from './data/css/style_3.jsx';\r\n// import {style_4} from './data/css/style_4.jsx';\r\n// import {style_5} from './data/css/style_5.jsx';\r\n// import {style_6} from './data/css/style_6.jsx';\r\n// import {style_7} from './data/css/style_7.jsx';\r\n// import {style_8} from './data/css/style_8.jsx';\r\n// import {style_9} from './data/css/style_9.jsx';\r\n// import {style_10} from './data/css/style_10.jsx';\r\n// import {style_11} from './data/css/style_11.jsx';\r\n// import {style_12} from './data/css/style_12.jsx';\r\n// import {style_13} from './data/css/style_13.jsx';\r\n\r\nexport default function Learn() {  \r\n\tconst [levelNum, setLevelNum] = useState(0);\r\n\r\n\tconst htmlStrings = [\r\n\t\thtml_1,\r\n\t\thtml_2,\r\n\t\t/*html_3,\r\n\t\thtml_4,\r\n\t\thtml_5,\r\n\t\thtml_6,\r\n\t\thtml_7,\r\n\t\thtml_8,\r\n\t\thtml_9,\r\n\t\thtml_10,\r\n\t\thtml_11,\r\n\t\thtml_12,\r\n\t\thtml_13,*/\r\n\t];\r\n\r\n\tconst cssStrings = [\r\n\t\tstyle_1,\r\n\t\tstyle_2,\r\n\t\t/*style_3,\r\n\t\tstyle_4,\r\n\t\tstyle_5,\r\n\t\tstyle_6,\r\n\t\tstyle_7,\r\n\t\tstyle_8,\r\n\t\tstyle_9,\r\n\t\tstyle_10,\r\n\t\tstyle_11,\r\n\t\tstyle_12,\r\n\t\tstyle_13,*/\r\n\t];\r\n\r\n\tconst menuOptions = [\r\n\t\t'Level 1: display: flex',\r\n\t\t'Level 2: justify-content',\r\n\t\t/*'Level 3: flex-direction',\r\n\t\t'Level 4: flex-wrap',\r\n\t\t'Level 5: flex-flow',\r\n\t\t'Level 6: align-items',\r\n\t\t'Level 7: align-content',\r\n\t\t'Level 8: order',\r\n\t\t'Level 9: flex-grow',\r\n\t\t'Level 10: flex-shrink',\r\n\t\t'Level 11: flex-basis',\r\n\t\t'Level 12: flex',\r\n\t\t'Level 13: align-self',*/\r\n\t]; \r\n\r\n\tconst infoTitle = menuOptions[levelNum];\r\n\r\n\tconst [htmlString, setHtmlString] = useState(htmlStrings[levelNum]);\r\n\tconst [cssString, setCssString] = useState(cssStrings[levelNum]); \r\n\tconst [defaultCssString, setDefaultCssString] = useState(cssStrings[levelNum]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetHtmlString(htmlStrings[levelNum])\r\n\t\tsetCssString(cssStrings[levelNum])\r\n\t\tsetDefaultCssString(cssStrings[levelNum])\r\n\r\n\t}, [levelNum])\r\n\r\n\treturn (\r\n\t\t<section className=\"learn-container\"> \r\n\t\t\t<LevelText i=\"1\" titles={menuOptions} setStyle={setCssString} defaultStyle={defaultCssString} levelNum={levelNum} setLevelNum={setLevelNum}/>\r\n\t\t\t<CodeInput i=\"2\" title=\"index.html\" code={htmlString} setCode={setHtmlString} originalCode={htmlStrings[levelNum]}/>\r\n\t\t\t<CodeInput i=\"3\" title=\"style.css\" code={cssString} setCode={setCssString} originalCode={cssStrings[levelNum]}/>\r\n\t\t\t<OutputDisplay i=\"4\" title=\"display\" htmlString={htmlString} cssString={cssString} />\r\n\t\t</section>\r\n\t)\r\n}","export const html = \r\n`<div class=\"item_1\">Item 1</div>\r\n<div class=\"item_2\">Item 2</div>`;","export const html = \r\n`<div class=\"container\">\r\n  <div class=\"item item_1\">1</div>\r\n  <div class=\"item item_2\">2</div>\r\n  <div class=\"item item_3\">3</div>\r\n  <div class=\"item item_4\">4</div> \r\n</div>`;","export const style = \r\n`.item_1 { \r\n  display: flex; \r\n  justify-content: center;  \r\n  background: red;  \r\n} \r\n\r\n.item_2 {  \t\r\n\r\n  justify-content: center;  \r\n  background: blue; \r\n}`;\r\n\r\n\r\n// \".item_1 {\" + <br> + \"display: flex\";","export const style = \r\n`.container {\r\n  display: flex;  \r\n\r\n}\r\n\r\n.item { \r\n  min-width: 2.5em;\r\n  min-height: 2.5em;\r\n}\r\n\r\n.item_1 {\r\n  background: blue;\r\n}\r\n\r\n.item_2 {\r\n  background: red;\r\n}\r\n\r\n.item_3 {\r\n  background: yellow;\r\n}\r\n\r\n.item_4 {\r\n  background: green;\r\n}`;","// add unique ids\r\n// display - inline-flex\r\n// seperate settings file\r\n// animate router\r\n// animate open and close play\r\n// click min window = close burger\r\n// add level selector on burger click \r\n// animate changes  \r\n// play -> if all deselected = change spacing so all move to left\r\n// learn -> type undo cut paste enables\r\n// Introduction - why is flex box useful => static vs flexible\r\n\r\n// Learn\r\n// use color boxes\r\n// allow users to shrink display view to show how flex works\r\n// click button to toggle reference grid on/off\r\n// check through all, show users what values are allowed for properties\r\n// Read\r\n\r\n// Write\r\n\r\n// Use\r\n\r\n// Support\r\n\r\n// settings\r\n\r\nimport React from 'react';\r\nimport Header from './components/Header.jsx';\r\nimport Home from './components/Home.jsx';\r\nimport Learn from './components/Learn.jsx';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport './styles/reset.css';\r\nimport './styles/fonts.css'; \r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app-container\">\r\n    \t<Router>\r\n    \t\t<Header/>\r\n        \t\t<Switch>\r\n                    <Route path={[\"/\", \"/flex-quest/\"]} exact component={Home}/>\r\n        \t\t\t<Route path=\"/learn\" component={Learn}/>\r\n        \t\t</Switch>\r\n\t    </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App'; \r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}