@import '../../styles/colors.scss';
@import '../../styles/fonts.scss';
@import '../../styles/transitions.scss';
@import '../../styles/mixins.scss';

$openCloseBox-closed-width: 36px;
$scrollbar-size: 16px;

.openCloseBox {
	height: 100%;
	display: flex;
	flex-direction: column; 
	transition: $openCloseBox-width-time width ease-in-out;    
}

.openCloseBox__open {
	width: 100%;
}

.openCloseBox__closed {
	width: $openCloseBox-closed-width;
}

.overflow-auto {
	overflow: auto;
}

.overflow-hidden {
	overflow: hidden;
}

/* =================== Box Header =================== */
.openCloseBox-header {
	min-height: 40px;
	height: 40px;
	width: 100%; 
	position: relative; 
	display: flex;
	align-items: center;
	background: $openCloseBox-background; 
	border-bottom: 1px solid $openCloseBox-highlight;
	overflow: hidden;
}

.openCloseBox-title {
	flex-grow: 1; 
	min-width: 0;
	display: flex;
	justify-content: center; 
	white-space: nowrap; 
	position: absolute;
	font-size: 1.2em; 
	font-family: $heading-font;
	color: $text-default;
	width: 100%;
	cursor: default;
}

.openCloseBox-buttonContainer {
	height: 100%;
	width: $openCloseBox-closed-width;
	min-width: $openCloseBox-closed-width;

	display: flex;
	justify-content: center;
	align-items: center;

	position: absolute; 
	right: 0;
	z-index: 3;

	background: $background-dark; 
}

/* =================== Box Body =================== */
.openCloseBox-body { 
	min-width: 100%;
	min-height: 100%; 
	background: $openCloseBox-background;
	color: $text-default;
	position: relative;
}

/* =================== Box Content Wrapper =================== */
.openCloseBox-contentWrapper { 
	min-width: 100%; 
	transition: height $openCloseBox-contentWrapper-height-time;
}

.openCloseBox-contentWrapper__open { 
	height: 100%; 
}

.openCloseBox-contentWrapper__closed { 
	height: 0; 
}

/* =================== Wrappers =================== */
/* used to cover scrollbars for fade out -> because can't use transition on scrollbars */
.openCloseBox-maskWrapper { 
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%; 
	display: flex;
	flex-direction: column; 
	align-items: flex-end; 
	pointer-events: none;
}

.openCloseBox-verticalMask { 
	width: $scrollbar-size;
	height: calc(100% - $scrollbar-size);
}

.openCloseBox-horizontalMask {
	height: $scrollbar-size;
	width: 100%; 
}

/* ==== Scrollbar mask*/
.openCloseBox-horizontalMask, 
.openCloseBox-verticalMask {
	background-color: $openCloseBox-background;
	transition: opacity $scrollbar-opactiy-time;
}

.openCloseBox-verticalMask__showScrollbar,
.openCloseBox-horizontalMask__showScrollbar { 
	opacity: 0;
}

.openCloseBox-verticalMask__hideScrollbar,
.openCloseBox-horizontalMask__hideScrollbar { 
	opacity: 1;
}

/* =================== Scrollbar =================== */
.openCloseBox-contentWrapper::-webkit-scrollbar {
	height: $scrollbar-size;
	width: $scrollbar-size;
}

.openCloseBox-contentWrapper::-webkit-scrollbar-track { 
	background: $scrollbar-background-color;;
}

// thumb = moving part
.openCloseBox-contentWrapper::-webkit-scrollbar-thumb { 
	background-color: $scrollbar-thumb-color;
	@include selectable-element();
}

// corner part
.openCloseBox-contentWrapper::-webkit-scrollbar-corner {
	background-color: $scollbar-corner-color;
}